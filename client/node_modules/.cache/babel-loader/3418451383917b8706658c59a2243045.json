{"ast":null,"code":"// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ObjectDetection = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const [map, setMap] = useState({});\n//   const { speak, cancel } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     var M = {};\n//     for (var i = 0; i < text.length; i++) {\n//       if (!M[text[i]]) M[text[i]] = 1;\n//       else M[text[i]] = M[text[i]] + 1;\n//     }\n//     var xx = \"\";\n//     for (let i = 0; i < Object.keys(M).length; i++) {\n//       if (M[Object.keys(M)[i]])\n//         xx = xx + M[Object.keys(M)[i]] + \" \" + Object.keys(M)[i] + \", \";\n//     }\n//\n//     setMap(M);\n//\n//     console.log(xx);\n//     speak({ text: `This Image contains: ${xx}` });\n//   };\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           ObjectDetection\n//         </h1>\n//       </div>\n//       <FileUpload\n//         setImageInputUrl={setImageInputUrl}\n//         setImageOutputUrl={setImageOutputUrl}\n//         setText={setText}\n//         speak={speakOutput}\n//         url={\"http://localhost:5000//object-recognition\"}\n//       />\n//       <div className=\"container border my-5\">\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\n//           {imageInputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Input Image</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageInputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//           {imageOutputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Result</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageOutputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//         </div>\n//         {text && (\n//           <div\n//             className=\"row\"\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n//           >\n//             <hr />\n//             <h1>Image Contains:</h1>\n//             <hr />\n//             <div\n//               className=\"p-5 m-5\"\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n//             >\n//               {Object.keys(map).map((key) => (\n//                 <h5 key={key}>{`${key}: ${map[key]}`}</h5>\n//               ))}\n//             </div>\n//             <button\n//               className=\"btn btn-success m-2 p-2\"\n//               type=\"button\"\n//               onClick={() => speak({ text: `This Image contains: ${text}` })}\n//             >\n//               Speak\n//             </button>\n//             <button\n//               className=\"btn btn-secondary m-2 p-2\"\n//               type=\"button\"\n//               onClick={cancel}\n//             >\n//               Stop\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default ObjectDetection;\n///////////////////////////////////////////////////////////\nimport React,{useState}from\"react\";import FileUpload from\"./FileUpload\";import{useSpeechSynthesis}from\"react-speech-kit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ObjectDetection=()=>{const[imageInputURL,setImageInputUrl]=useState(\"\");const[imageOutputURL,setImageOutputUrl]=useState(\"\");const[text,setText]=useState(\"\");const[map,setMap]=useState({});const{speak,cancel}=useSpeechSynthesis();const speakOutput=text=>{var M={};for(var i=0;i<text.length;i++){if(!M[text[i]])M[text[i]]=1;else M[text[i]]=M[text[i]]+1;}var sortedKeys=Object.keys(M).sort();var speechText=sortedKeys.map(key=>\"\".concat(M[key],\" \").concat(key)).join(\", \").replace(/, ([^,]*)$/,' and $1');setMap(M);speak({text:\"This Image contains: \".concat(speechText)});};return/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"phone-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"phone\",style:{width:\"85%\",height:\"95%\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"phone-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"assistant-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"assistant-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"assistant-title\",children:/*#__PURE__*/_jsx(\"h1\",{style:{textShadow:\"1px 1px 2px #000\",color:\"#003366\"},children:\"Object Detection\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"assistant-body\",children:[/*#__PURE__*/_jsx(FileUpload,{setImageInputUrl:setImageInputUrl,setImageOutputUrl:setImageOutputUrl,setText:setText,speak:speakOutput,url:\"http://localhost:5000/object-recognition\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-container\",children:[imageInputURL&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-image\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Input Image\"}),/*#__PURE__*/_jsx(\"img\",{src:imageInputURL,alt:\"Input\"})]}),imageOutputURL&&/*#__PURE__*/_jsxs(\"div\",{className:\"output-image\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Result\"}),/*#__PURE__*/_jsx(\"img\",{src:imageOutputURL,alt:\"Output\"})]})]}),text&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Object Identification:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"speak-button\",onClick:()=>speakOutput(text),children:\"Speak\"}),/*#__PURE__*/_jsx(\"button\",{className:\"stop-button\",onClick:cancel,children:\"Stop\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:/*#__PURE__*/_jsx(\"ul\",{className:\"transcription-list\",children:Object.keys(map).sort().map(key=>/*#__PURE__*/_jsx(\"li\",{children:\"\".concat(map[key],\" \").concat(key,\",\")},key))})})]})]})]})]})})})})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:\"\\n        /* Styles go here */\\n        .phone-container {\\n          display: flex;\\n          justify-content: center;\\n          align-items: center;\\n          height: 100vh;\\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\\n        }\\n        .phone {\\n          width: 85%;\\n          height: 95%;\\n          max-width: 750px;\\n          background: #333;\\n          border-radius: 20px;\\n          overflow: hidden;\\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\\n          display: flex;\\n          flex-direction: column;\\n        }\\n        .phone-screen {\\n          flex: 1;\\n          width: 100%;\\n          height: 100%;\\n          background: #fff;\\n          padding: 20px;\\n          display: flex;\\n          flex-direction: column;\\n          justify-content: center;\\n          align-items: center;\\n          overflow-y: auto;\\n        }\\n        .assistant-container {\\n          width: 100%;\\n          max-width: 400px;\\n        }\\n        .assistant-content {\\n          text-align: center;\\n        }\\n        .assistant-title {\\n          font-size: 28px;\\n          margin-bottom: 20px;\\n        }\\n        .assistant-body {\\n          margin-top: 20px;\\n        }\\n        .image-container {\\n          display: flex;\\n          justify-content: space-between;\\n          margin-bottom: 20px;\\n        }\\n        .input-image,\\n        .output-image {\\n          flex: 1;\\n          text-align: center;\\n        }\\n        .input-image img,\\n        .output-image img {\\n          width: 100%;\\n          border: 4px solid #d2d2d2;\\n          border-radius: 5px;\\n        }\\n        .result {\\n          margin-top: 30px;\\n          border-top: 2px solid gray;\\n          padding-top: 20px;\\n        }\\n        .text-area {\\n          display: flex;\\n          flex-direction: column;\\n          align-items: center;\\n        }\\n        .text {\\n          background: rgba(235, 255, 251, 0.8);\\n          width: 85%;\\n          padding: 20px;\\n          border-radius: 5px;\\n          margin-bottom: 10px;\\n          overflow-y: auto;\\n          max-height: 200px;\\n        }\\n        .transcription-list {\\n          padding: 0;\\n          margin: 0;\\n          list-style-type: none;\\n        }\\n        .transcription-list li {\\n          margin-bottom: 5px;\\n        }\\n        .buttons {\\n          display: flex;\\n          justify-content: space-between;\\n        }\\n        .speak-button,\\n        .copy-button,\\n        .stop-button {\\n          padding: 8px 16px;\\n          font-size: 14px;\\n          border: none;\\n          border-radius: 5px;\\n          cursor: pointer;\\n          transition: background-color 0.3s ease;\\n        }\\n        .speak-button:hover {\\n          background-color: #4caf50;\\n        }\\n        .copy-button:hover {\\n          background-color: #2196f3;\\n        }\\n        .stop-button {\\n          background-color: #f44336;\\n        }\\n      \"})]});};export default ObjectDetection;","map":{"version":3,"names":["React","useState","FileUpload","useSpeechSynthesis","jsx","_jsx","jsxs","_jsxs","ObjectDetection","imageInputURL","setImageInputUrl","imageOutputURL","setImageOutputUrl","text","setText","map","setMap","speak","cancel","speakOutput","M","i","length","sortedKeys","Object","keys","sort","speechText","key","concat","join","replace","Fragment","children","className","style","width","height","textShadow","color","url","src","alt","onClick"],"sources":["C:/Users/CYPHER/Documents/GitHub/ScanVue/client/src/components/objectDetection.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ObjectDetection = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const [map, setMap] = useState({});\n//   const { speak, cancel } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     var M = {};\n//     for (var i = 0; i < text.length; i++) {\n//       if (!M[text[i]]) M[text[i]] = 1;\n//       else M[text[i]] = M[text[i]] + 1;\n//     }\n//     var xx = \"\";\n//     for (let i = 0; i < Object.keys(M).length; i++) {\n//       if (M[Object.keys(M)[i]])\n//         xx = xx + M[Object.keys(M)[i]] + \" \" + Object.keys(M)[i] + \", \";\n//     }\n//\n//     setMap(M);\n//\n//     console.log(xx);\n//     speak({ text: `This Image contains: ${xx}` });\n//   };\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           ObjectDetection\n//         </h1>\n//       </div>\n//       <FileUpload\n//         setImageInputUrl={setImageInputUrl}\n//         setImageOutputUrl={setImageOutputUrl}\n//         setText={setText}\n//         speak={speakOutput}\n//         url={\"http://localhost:5000//object-recognition\"}\n//       />\n//       <div className=\"container border my-5\">\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\n//           {imageInputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Input Image</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageInputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//           {imageOutputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Result</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageOutputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//         </div>\n//         {text && (\n//           <div\n//             className=\"row\"\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n//           >\n//             <hr />\n//             <h1>Image Contains:</h1>\n//             <hr />\n//             <div\n//               className=\"p-5 m-5\"\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n//             >\n//               {Object.keys(map).map((key) => (\n//                 <h5 key={key}>{`${key}: ${map[key]}`}</h5>\n//               ))}\n//             </div>\n//             <button\n//               className=\"btn btn-success m-2 p-2\"\n//               type=\"button\"\n//               onClick={() => speak({ text: `This Image contains: ${text}` })}\n//             >\n//               Speak\n//             </button>\n//             <button\n//               className=\"btn btn-secondary m-2 p-2\"\n//               type=\"button\"\n//               onClick={cancel}\n//             >\n//               Stop\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default ObjectDetection;\n\n\n\n\n\n///////////////////////////////////////////////////////////\n\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst ObjectDetection = () => {\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [map, setMap] = useState({});\n  const { speak, cancel } = useSpeechSynthesis();\n\n  const speakOutput = (text) => {\n    var M = {};\n    for (var i = 0; i < text.length; i++) {\n      if (!M[text[i]]) M[text[i]] = 1;\n      else M[text[i]] = M[text[i]] + 1;\n    }\n    var sortedKeys = Object.keys(M).sort();\n    var speechText = sortedKeys\n      .map((key) => `${M[key]} ${key}`)\n      .join(\", \")\n      .replace(/, ([^,]*)$/, ' and $1');\n\n    setMap(M);\n\n    speak({ text: `This Image contains: ${speechText}` });\n  };\n\n  return (\n    <React.Fragment>\n      <div className=\"phone-container\">\n        <div className=\"phone\" style={{ width: \"85%\", height: \"95%\" }}>\n          <div className=\"phone-screen\">\n            <div className=\"assistant-container\">\n              <div className=\"assistant-content\">\n                <div className=\"assistant-title\">\n                  <h1 style={{ textShadow: \"1px 1px 2px #000\", color: \"#003366\" }}>Object Detection</h1>\n                </div>\n                <div className=\"assistant-body\">\n                  <FileUpload\n                    setImageInputUrl={setImageInputUrl}\n                    setImageOutputUrl={setImageOutputUrl}\n                    setText={setText}\n                    speak={speakOutput}\n                    url={\"http://localhost:5000/object-recognition\"}\n                  />\n                  <div className=\"image-container\">\n                    {imageInputURL && (\n                      <div className=\"input-image\">\n                        <h3>Input Image</h3>\n                        <img src={imageInputURL} alt=\"Input\" />\n                      </div>\n                    )}\n                    {imageOutputURL && (\n                      <div className=\"output-image\">\n                        <h3>Result</h3>\n                        <img src={imageOutputURL} alt=\"Output\" />\n                      </div>\n                    )}\n                  </div>\n                  {text && (\n                    <div className=\"result\">\n                      <h3>Object Identification:</h3>\n                      <div className=\"text-area\">\n                        <div className=\"buttons\">\n                          <button\n                            className=\"speak-button\"\n                            onClick={() => speakOutput(text)}\n                          >\n                            Speak\n                          </button>\n                          <button className=\"stop-button\" onClick={cancel}>\n                            Stop\n                          </button>\n                        </div>\n                        <div className=\"text\">\n                          <ul className=\"transcription-list\">\n                            {Object.keys(map)\n                              .sort()\n                              .map((key) => (\n                                <li key={key}>{`${map[key]} ${key},`}</li>\n                              ))}\n                          </ul>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        /* Styles go here */\n        .phone-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\n        }\n        .phone {\n          width: 85%;\n          height: 95%;\n          max-width: 750px;\n          background: #333;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n          display: flex;\n          flex-direction: column;\n        }\n        .phone-screen {\n          flex: 1;\n          width: 100%;\n          height: 100%;\n          background: #fff;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          overflow-y: auto;\n        }\n        .assistant-container {\n          width: 100%;\n          max-width: 400px;\n        }\n        .assistant-content {\n          text-align: center;\n        }\n        .assistant-title {\n          font-size: 28px;\n          margin-bottom: 20px;\n        }\n        .assistant-body {\n          margin-top: 20px;\n        }\n        .image-container {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .input-image,\n        .output-image {\n          flex: 1;\n          text-align: center;\n        }\n        .input-image img,\n        .output-image img {\n          width: 100%;\n          border: 4px solid #d2d2d2;\n          border-radius: 5px;\n        }\n        .result {\n          margin-top: 30px;\n          border-top: 2px solid gray;\n          padding-top: 20px;\n        }\n        .text-area {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        .text {\n          background: rgba(235, 255, 251, 0.8);\n          width: 85%;\n          padding: 20px;\n          border-radius: 5px;\n          margin-bottom: 10px;\n          overflow-y: auto;\n          max-height: 200px;\n        }\n        .transcription-list {\n          padding: 0;\n          margin: 0;\n          list-style-type: none;\n        }\n        .transcription-list li {\n          margin-bottom: 5px;\n        }\n        .buttons {\n          display: flex;\n          justify-content: space-between;\n        }\n        .speak-button,\n        .copy-button,\n        .stop-button {\n          padding: 8px 16px;\n          font-size: 14px;\n          border: none;\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n        .speak-button:hover {\n          background-color: #4caf50;\n        }\n        .copy-button:hover {\n          background-color: #2196f3;\n        }\n        .stop-button {\n          background-color: #f44336;\n        }\n      `}</style>\n    </React.Fragment>\n  );\n};\n\nexport default ObjectDetection;\n\n"],"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"},"metadata":{},"sourceType":"module"}