{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\assistant.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n//\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   //   SpeechRecognition.startListening({ continuous: true });\n//   const { speak } = useSpeechSynthesis();\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         }else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         }else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//\n//         console.log(\"hii\");\n//       },\n//       //   matchInterim: true,\n//     },\n//     // {\n//     //   command: \"*\",\n//     //   callback: () => {\n//     //     speak({ text: \"Please repeat\" });\n//\n//     //     console.log(\"repeat\");\n//     //   },\n//     // },\n//   ];\n//   const { transcript: t1 } = useSpeechRecognition({ commands });\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n// {/*         <div>Say \"Hey Jarvis\"</div> */}\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button onClick={SpeechRecognition.startListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button onClick={SpeechRecognition.stopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default Assistant;\n\n////////////////////////////////////////////////////////////////////////////\n\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   const { speak } = useSpeechSynthesis();\n//   const { transcript: t1 } = useSpeechRecognition();\n//\n//   const handleStartListening = () => {\n//     SpeechRecognition.startListening({ continuous: true });\n//   };\n//\n//   const handleStopListening = () => {\n//     SpeechRecognition.stopListening();\n//   };\n//\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         } else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         } else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//         console.log(\"Hi\");\n//       },\n//     },\n//   ];\n//\n//   return (\n//     <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//             textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button className=\"btn btn-primary\" onClick={handleStartListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button className=\"btn btn-danger\" onClick={handleStopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n//\n// export default Assistant;\n\n//////////////////////////////////////////////////////\n\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assistant = () => {\n  _s();\n  const history = useHistory();\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const {\n    transcript: t1\n  } = useSpeechRecognition();\n  const handleStartListening = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const handleStopListening = () => {\n    SpeechRecognition.stopListening();\n  };\n  const commands = [{\n    command: \"Go to *\",\n    callback: link => {\n      const x = `Redirect to: ${link}`;\n      console.log(x);\n      if (link === \"object detection\") {\n        speak({\n          text: x\n        });\n        history.push(`/object-detection`);\n      } else if (link === \"face recognition\") {\n        speak({\n          text: x\n        });\n        history.push(`/face-recognition`);\n      } else if (link === \"image to text\") {\n        speak({\n          text: x\n        });\n        history.push(`/image-to-text`);\n      } else if (link === \"text to speech\") {\n        speak({\n          text: x\n        });\n        history.push(`/text-to-speech`);\n      } else if (link === \"speech to text\") {\n        speak({\n          text: x\n        });\n        history.push(`/speech-to-text`);\n      } else if (link === \"home\") {\n        speak({\n          text: x\n        });\n        history.push(`/`);\n      } else {\n        speak({\n          text: \"I don't get it, Please try again!\"\n        });\n      }\n    }\n  }, {\n    command: \"Hey Jarvis\",\n    callback: () => {\n      speak({\n        text: \"Hi Sir\"\n      });\n      console.log(\"Hi\");\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"assistant-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"assistant\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"assistant-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row m-2 p-4\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"assistant-title\",\n            children: \"Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-body\",\n          style: {\n            border: \"10px solid gray\",\n            padding: \"10px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Say \\\"Hey Jarvis\\\"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: t1 ? t1 : \"Start listening for transcript\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handleStartListening,\n            children: \"Start listening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: handleStopListening,\n            children: \"Stop listening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .assistant-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n        }\n\n        .assistant {\n          width: 300px;\n        }\n\n        .assistant-content {\n          background: #f5f5f5;\n          border-radius: 20px;\n          text-align: center;\n        }\n\n        .assistant-title {\n          font-family: Georgia, Times, serif;\n          font-size: 45px;\n          font-weight: bolder;\n          margin: 0;\n        }\n\n        .assistant-body {\n          margin-top: 20px;\n        }\n\n        .btn {\n          margin: 5px;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n};\n_s(Assistant, \"RrbyWvuizjVUQSCZy/y0BGy51/s=\", false, function () {\n  return [useHistory, useSpeechSynthesis, useSpeechRecognition];\n});\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useHistory","useSpeechSynthesis","jsxDEV","_jsxDEV","Assistant","_s","history","speak","transcript","t1","handleStartListening","startListening","continuous","handleStopListening","stopListening","commands","command","callback","link","x","console","log","text","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","border","padding","onClick","jsx","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/assistant.jsx"],"sourcesContent":["// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n//\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   //   SpeechRecognition.startListening({ continuous: true });\n//   const { speak } = useSpeechSynthesis();\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         }else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         }else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//\n//         console.log(\"hii\");\n//       },\n//       //   matchInterim: true,\n//     },\n//     // {\n//     //   command: \"*\",\n//     //   callback: () => {\n//     //     speak({ text: \"Please repeat\" });\n//\n//     //     console.log(\"repeat\");\n//     //   },\n//     // },\n//   ];\n//   const { transcript: t1 } = useSpeechRecognition({ commands });\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n// {/*         <div>Say \"Hey Jarvis\"</div> */}\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button onClick={SpeechRecognition.startListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button onClick={SpeechRecognition.stopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default Assistant;\n\n\n////////////////////////////////////////////////////////////////////////////\n\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   const { speak } = useSpeechSynthesis();\n//   const { transcript: t1 } = useSpeechRecognition();\n//\n//   const handleStartListening = () => {\n//     SpeechRecognition.startListening({ continuous: true });\n//   };\n//\n//   const handleStopListening = () => {\n//     SpeechRecognition.stopListening();\n//   };\n//\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         } else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         } else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//         console.log(\"Hi\");\n//       },\n//     },\n//   ];\n//\n//   return (\n//     <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//             textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button className=\"btn btn-primary\" onClick={handleStartListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button className=\"btn btn-danger\" onClick={handleStopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n//\n// export default Assistant;\n\n\n\n//////////////////////////////////////////////////////\n\n\n\n\n\n\nimport React from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst Assistant = () => {\n  const history = useHistory();\n  const { speak } = useSpeechSynthesis();\n  const { transcript: t1 } = useSpeechRecognition();\n\n  const handleStartListening = () => {\n    SpeechRecognition.startListening({ continuous: true });\n  };\n\n  const handleStopListening = () => {\n    SpeechRecognition.stopListening();\n  };\n\n  const commands = [\n    {\n      command: \"Go to *\",\n      callback: (link) => {\n        const x = `Redirect to: ${link}`;\n        console.log(x);\n        if (link === \"object detection\") {\n          speak({ text: x });\n          history.push(`/object-detection`);\n        } else if (link === \"face recognition\") {\n          speak({ text: x });\n          history.push(`/face-recognition`);\n        } else if (link === \"image to text\") {\n          speak({ text: x });\n          history.push(`/image-to-text`);\n        } else if (link === \"text to speech\") {\n          speak({ text: x });\n          history.push(`/text-to-speech`);\n        } else if (link === \"speech to text\") {\n          speak({ text: x });\n          history.push(`/speech-to-text`);\n        } else if (link === \"home\") {\n          speak({ text: x });\n          history.push(`/`);\n        } else {\n          speak({ text: \"I don't get it, Please try again!\" });\n        }\n      },\n    },\n    {\n      command: \"Hey Jarvis\",\n      callback: () => {\n        speak({ text: \"Hi Sir\" });\n        console.log(\"Hi\");\n      },\n    },\n  ];\n\n  return (\n    <div className=\"assistant-container\">\n      <div className=\"assistant\">\n        <div className=\"assistant-content\">\n          <div className=\"row m-2 p-4\">\n            <h1 className=\"assistant-title\">Assistant</h1>\n          </div>\n          <div className=\"assistant-body\" style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n            <h3>Say \"Hey Jarvis\"</h3>\n            <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n            <button className=\"btn btn-primary\" onClick={handleStartListening}>\n              Start listening\n            </button>\n            <button className=\"btn btn-danger\" onClick={handleStopListening}>\n              Stop listening\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .assistant-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n        }\n\n        .assistant {\n          width: 300px;\n        }\n\n        .assistant-content {\n          background: #f5f5f5;\n          border-radius: 20px;\n          text-align: center;\n        }\n\n        .assistant-title {\n          font-family: Georgia, Times, serif;\n          font-size: 45px;\n          font-weight: bolder;\n          margin: 0;\n        }\n\n        .assistant-body {\n          margin-top: 20px;\n        }\n\n        .btn {\n          margin: 5px;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Assistant;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAOA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAM;IAAEO;EAAM,CA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"},"metadata":{},"sourceType":"module"}