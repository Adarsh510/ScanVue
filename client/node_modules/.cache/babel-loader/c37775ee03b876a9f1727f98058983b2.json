{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\imageToText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageToText = () => {\n  _s();\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const {\n    speak,\n    cancel,\n    speaking\n  } = useSpeechSynthesis();\n  const speakOutput = text => {\n    speak({\n      text: `This Image contains: ${text}`\n    });\n  };\n\n  // speak({ text: \"hi\" });\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row m-2 p-4\",\n      style: {\n        background: \"#f5f5f5\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"Georgia, Times, serif\",\n          fontSize: \"45px\",\n          fontWeight: \"bolder\"\n        },\n        children: \"Image To Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FileUpload, {\n      setImageInputUrl: setImageInputUrl,\n      setImageOutputUrl: setImageOutputUrl,\n      setText: setText,\n      speak: speakOutput,\n      url: \"http://localhost:5000/image-to-text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container border my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [imageInputURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"display-5\",\n            children: \"Input Image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"100%\",\n              border: \"4px solid #d2d2d2\",\n              borderRadius: \"5px\"\n            },\n            src: imageInputURL,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this), imageOutputURL && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-6 p-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"display-5\",\n            children: \"Result\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            style: {\n              width: \"100%\",\n              border: \"4px solid #d2d2d2\",\n              borderRadius: \"5px\"\n            },\n            src: imageOutputURL,\n            alt: \"img\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        style: {\n          marginTop: \"30px\",\n          borderTop: \"2px solid gray\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Image Contains:\", speaking ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary m-2 p-2\",\n            type: \"button\",\n            onClick: cancel,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success m-2 p-2\",\n            type: \"button\",\n            onClick: () => speak({\n              text\n            }),\n            children: \"Speak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-5 m-5\",\n          style: {\n            background: \"rgba(235, 255, 251, 0.8)\",\n            width: \"85%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageToText, \"EZ2PtYXhksNCEKCm+7bXkHOdUpQ=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = ImageToText;\nexport default ImageToText;\nvar _c;\n$RefreshReg$(_c, \"ImageToText\");","map":{"version":3,"names":["React","useState","FileUpload","useSpeechSynthesis","jsxDEV","_jsxDEV","ImageToText","_s","imageInputURL","setImageInputUrl","imageOutputURL","setImageOutputUrl","text","setText","speak","cancel","speaking","speakOutput","Fragment","children","className","style","background","textAlign","fontFamily","fontSize","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","url","width","border","borderRadius","src","alt","marginTop","borderTop","type","onClick","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/imageToText.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst ImageToText = () => {\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const { speak, cancel, speaking } = useSpeechSynthesis();\n\n  const speakOutput = (text) => {\n    speak({ text: `This Image contains: ${text}` });\n  };\n\n  // speak({ text: \"hi\" });\n  return (\n    <React.Fragment>\n      <div\n        className=\"row m-2 p-4\"\n        style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n      >\n        <h1\n          style={{\n            fontFamily: \"Georgia, Times, serif\",\n            fontSize: \"45px\",\n            fontWeight: \"bolder\",\n          }}\n        >\n          Image To Text\n        </h1>\n      </div>\n      <FileUpload\n        setImageInputUrl={setImageInputUrl}\n        setImageOutputUrl={setImageOutputUrl}\n        setText={setText}\n        speak={speakOutput}\n        url={\"http://localhost:5000/image-to-text\"}\n      />\n      <div className=\"container border my-5\">\n        <div className=\"row\" style={{ textAlign: \"center\" }}>\n          {imageInputURL && (\n            <div className=\"col-6 p-2\">\n              <h3 className=\"display-5\">Input Image</h3>\n              <img\n                style={{\n                  width: \"100%\",\n                  border: \"4px solid #d2d2d2\",\n                  borderRadius: \"5px\",\n                }}\n                src={imageInputURL}\n                alt=\"img\"\n              />\n            </div>\n          )}\n          {imageOutputURL && (\n            <div className=\"col-6 p-2\">\n              <h3 className=\"display-5\">Result</h3>\n              <img\n                style={{\n                  width: \"100%\",\n                  border: \"4px solid #d2d2d2\",\n                  borderRadius: \"5px\",\n                }}\n                src={imageOutputURL}\n                alt=\"img\"\n              />\n            </div>\n          )}\n        </div>\n        {text && (\n          <div\n            className=\"row\"\n            style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n          >\n            <hr />\n            <h1>\n              Image Contains:\n              {speaking ? (\n                <button\n                  className=\"btn btn-secondary m-2 p-2\"\n                  type=\"button\"\n                  onClick={cancel}\n                >\n                  Stop\n                </button>\n              ) : (\n                <button\n                  className=\"btn btn-success m-2 p-2\"\n                  type=\"button\"\n                  onClick={() => speak({ text })}\n                >\n                  Speak\n                </button>\n              )}\n            </h1>\n            <hr />\n            <div\n              className=\"p-5 m-5\"\n              style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n            >\n              <h5>{text}</h5>\n            </div>\n          </div>\n        )}\n      </div>\n    </React.Fragment>\n  );\n};\nexport default ImageToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}