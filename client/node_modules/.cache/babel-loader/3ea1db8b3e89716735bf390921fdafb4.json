{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\MAIN\\\\CODE\\\\BTP_Project-master\\\\BTP_Project-master\\\\client\\\\src\\\\components\\\\assistant.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assistant = () => {\n  _s();\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const {\n    transcript,\n    resetTranscript\n  } = useSpeechRecognition();\n  const [listening, setListening] = useState(false);\n  const startListening = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n    setListening(true);\n  };\n  const stopListening = () => {\n    SpeechRecognition.stopListening();\n    setListening(false);\n  };\n  const handleSpeech = () => {\n    if (transcript.toLowerCase().includes(\"hello\")) {\n      speak({\n        text: \"Hello Adarsh\"\n      });\n    }\n    // Add more commands here as needed\n  };\n  useEffect(() => {\n    if (transcript) {\n      handleSpeech();\n    }\n  }, [transcript]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Voice Assistant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: listening ? stopListening : startListening,\n        children: listening ? \"Stop Listening\" : \"Start Listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: transcript ? transcript : \"Listening for speech...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Assistant, \"6hcDgsIJsKJiiVar/BawgE67eTU=\", false, function () {\n  return [useSpeechSynthesis, useSpeechRecognition];\n});\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["React","useState","useEffect","SpeechRecognition","useSpeechRecognition","useSpeechSynthesis","jsxDEV","_jsxDEV","Assistant","_s","speak","transcript","resetTranscript","listening","setListening","startListening","continuous","stopListening","handleSpeech","toLowerCase","includes","text","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Project/MAIN/CODE/BTP_Project-master/BTP_Project-master/client/src/components/assistant.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst Assistant = () => {\n  const { speak } = useSpeechSynthesis();\n  const { transcript, resetTranscript } = useSpeechRecognition();\n  const [listening, setListening] = useState(false);\n\n  const startListening = () => {\n    SpeechRecognition.startListening({ continuous: true });\n    setListening(true);\n  };\n\n  const stopListening = () => {\n    SpeechRecognition.stopListening();\n    setListening(false);\n  };\n\n  const handleSpeech = () => {\n    if (transcript.toLowerCase().includes(\"hello\")) {\n      speak({ text: \"Hello Adarsh\" });\n    }\n    // Add more commands here as needed\n  };\n\n  useEffect(() => {\n    if (transcript) {\n      handleSpeech();\n    }\n  }, [transcript]);\n\n  return (\n    <div>\n      <h1>Voice Assistant</h1>\n      <div>\n        <button onClick={listening ? stopListening : startListening}>\n          {listening ? \"Stop Listening\" : \"Start Listening\"}\n        </button>\n      </div>\n      <div>\n        <p>{transcript ? transcript : \"Listening for speech...\"}</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Assistant;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,iBAAiB,IAAIC,oBAAoB,QAAQ,0BAA0B;AAClF,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAM,CAAC,GAAGL,kBAAkB,CAAC,CAAC;EACtC,MAAM;IAAEM,UAAU;IAAEC;EAAgB,CAAC,GAAGR,oBAAoB,CAAC,CAAC;EAC9D,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3BZ,iBAAiB,CAACY,cAAc,CAAC;MAAEC,UAAU,EAAE;IAAK,CAAC,CAAC;IACtDF,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1Bd,iBAAiB,CAACc,aAAa,CAAC,CAAC;IACjCH,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIP,UAAU,CAACQ,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC9CV,KAAK,CAAC;QAAEW,IAAI,EAAE;MAAe,CAAC,CAAC;IACjC;IACA;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACd,IAAIS,UAAU,EAAE;MACdO,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACP,UAAU,CAAC,CAAC;EAEhB,oBACEJ,OAAA;IAAAe,QAAA,gBACEf,OAAA;MAAAe,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBnB,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAQoB,OAAO,EAAEd,SAAS,GAAGI,aAAa,GAAGF,cAAe;QAAAO,QAAA,EACzDT,SAAS,GAAG,gBAAgB,GAAG;MAAiB;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNnB,OAAA;MAAAe,QAAA,eACEf,OAAA;QAAAe,QAAA,EAAIX,UAAU,GAAGA,UAAU,GAAG;MAAyB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAzCID,SAAS;EAAA,QACKH,kBAAkB,EACID,oBAAoB;AAAA;AAAAwB,EAAA,GAFxDpB,SAAS;AA2Cf,eAAeA,SAAS;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}