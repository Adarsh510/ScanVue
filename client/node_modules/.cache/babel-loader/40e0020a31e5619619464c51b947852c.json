{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\speechToText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Notes from \"./notes\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SpeechToText = () => {\n  _s();\n  const [notes, setnotes] = useState([{\n    time: \"1\",\n    val: \"Hello Everyone\"\n  }, {\n    time: \"2\",\n    val: \"Welcome to Scanvue\"\n  }]);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition\n  } = useSpeechRecognition();\n  // SpeechRecognition.startListening({ continuous: false });\n\n  if (!browserSupportsSpeechRecognition) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Browser doesn't support speech recognition.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row m-2 p-4\",\n      style: {\n        background: \"#f5f5f5\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"Georgia, Times, serif\",\n          fontSize: \"45px\",\n          fontWeight: \"bolder\"\n        },\n        children: \"Speech To Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"column\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row mx-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-5 p-5\",\n          style: {\n            border: \"4px solid #f8f9fa\"\n          },\n          children: [!listening && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 mb-2 bg-light text-dark\",\n            children: \"Please click \\\"Start\\\" and start speaking.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), listening && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"p-3 mb-2 bg-light text-dark\",\n            children: \"Please click \\\"Stop\\\" and stop speaking.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Microphone: \", listening ? \"on\" : \"off\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), !listening && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success \",\n            onClick: () => SpeechRecognition.startListening({\n              continuous: true\n            }),\n            children: \"Start\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), listening && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary \",\n            onClick: SpeechRecognition.abortListening,\n            children: \"Stop\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-warning mx-2\",\n            onClick: resetTranscript,\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), transcript && /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mx-3\",\n              children: \"You speak:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                margin: \"4px\",\n                padding: \"10px\",\n                border: \"2px solid #f8f9fa\",\n                borderRadius: \"10px\",\n                background: \"rgba(191, 191, 191, 0.7)\",\n                minHeight: \"90px\"\n              },\n              children: transcript\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info mx-2\",\n              onClick: () => {\n                const x = notes;\n                SpeechRecognition.abortListening();\n                x.unshift({\n                  time: Date.now(),\n                  val: transcript\n                });\n                setnotes(x);\n                resetTranscript();\n              },\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-info\",\n              onClick: () => {\n                SpeechRecognition.abortListening();\n                navigator.clipboard.writeText(transcript);\n              },\n              children: \"copy\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7 px-5 py-2\",\n          style: {\n            border: \"4px solid #f8f9fa\",\n            height: \"500px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Notes, {\n            notes: notes,\n            setnotes: setnotes\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(SpeechToText, \"HI4pOIz/uuHPIMOTxzxl51HaX2s=\", false, function () {\n  return [useSpeechRecognition];\n});\n_c = SpeechToText;\nexport default SpeechToText;\nvar _c;\n$RefreshReg$(_c, \"SpeechToText\");","map":{"version":3,"names":["React","useState","Notes","SpeechRecognition","useSpeechRecognition","jsxDEV","_jsxDEV","SpeechToText","_s","notes","setnotes","time","val","transcript","listening","resetTranscript","browserSupportsSpeechRecognition","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","className","style","background","textAlign","fontFamily","fontSize","fontWeight","border","onClick","startListening","continuous","abortListening","margin","padding","borderRadius","minHeight","x","unshift","Date","now","navigator","clipboard","writeText","height","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/speechToText.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport Notes from \"./notes\";\n\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\n\nconst SpeechToText = () => {\n  const [notes, setnotes] = useState([\n    { time: \"1\", val: \"Hello Everyone\" },\n    { time: \"2\", val: \"Welcome to Scanvue\" },\n  ]);\n  const {\n    transcript,\n    listening,\n    resetTranscript,\n    browserSupportsSpeechRecognition,\n  } = useSpeechRecognition();\n  // SpeechRecognition.startListening({ continuous: false });\n\n  if (!browserSupportsSpeechRecognition) {\n    return <span>Browser doesn't support speech recognition.</span>;\n  }\n\n  return (\n    <React.Fragment>\n      <div\n        className=\"row m-2 p-4\"\n        style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n      >\n        <h1\n          style={{\n            fontFamily: \"Georgia, Times, serif\",\n            fontSize: \"45px\",\n            fontWeight: \"bolder\",\n          }}\n        >\n          Speech To Text\n        </h1>\n      </div>\n      <div className=\"column\">\n        <div className=\"row mx-2\">\n          <div className=\"col-5 p-5\" style={{ border: \"4px solid #f8f9fa\" }}>\n            {!listening && (\n              <div className=\"p-3 mb-2 bg-light text-dark\">\n                Please click \"Start\" and start speaking.\n              </div>\n            )}\n            {listening && (\n              <div className=\"p-3 mb-2 bg-light text-dark\">\n                Please click \"Stop\" and stop speaking.\n              </div>\n            )}\n            <p>Microphone: {listening ? \"on\" : \"off\"}</p>\n            {!listening && (\n              <button\n                className=\"btn btn-success \"\n                onClick={() =>\n                  SpeechRecognition.startListening({ continuous: true })\n                }\n              >\n                Start\n              </button>\n            )}\n            {listening && (\n              <button\n                className=\"btn btn-secondary \"\n                onClick={SpeechRecognition.abortListening}\n              >\n                Stop\n              </button>\n            )}\n            <button className=\"btn btn-warning mx-2\" onClick={resetTranscript}>\n              Reset\n            </button>\n            <hr />\n            {transcript && (\n              <React.Fragment>\n                <h5 className=\"mx-3\">You speak:</h5>\n                <div\n                  style={{\n                    margin: \"4px\",\n                    padding: \"10px\",\n                    border: \"2px solid #f8f9fa\",\n                    borderRadius: \"10px\",\n                    background: \"rgba(191, 191, 191, 0.7)\",\n                    minHeight: \"90px\",\n                  }}\n                >\n                  {transcript}\n                </div>\n                <button\n                  className=\"btn btn-info mx-2\"\n                  onClick={() => {\n                    const x = notes;\n                    SpeechRecognition.abortListening();\n                    x.unshift({ time: Date.now(), val: transcript });\n                    setnotes(x);\n                    resetTranscript();\n                  }}\n                >\n                  Save\n                </button>\n                <button\n                  className=\"btn btn-info\"\n                  onClick={() => {\n                    SpeechRecognition.abortListening();\n                    navigator.clipboard.writeText(transcript);\n                  }}\n                >\n                  copy\n                </button>\n              </React.Fragment>\n            )}\n          </div>\n          <div\n            className=\"col-7 px-5 py-2\"\n            style={{\n              border: \"4px solid #f8f9fa\",\n              height: \"500px\",\n            }}\n          >\n            <Notes notes={notes} setnotes={setnotes} />\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default SpeechToText;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}