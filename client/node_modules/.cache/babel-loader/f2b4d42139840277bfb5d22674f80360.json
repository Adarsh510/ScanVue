{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\textToSpeech.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const TextToSpeech = () => {\n//   const [text, setText] = useState(\"\");\n//   const [pitch, setPitch] = useState(1);\n//   const [rate, setRate] = useState(1);\n//   const [voiceIndex, setVoiceIndex] = useState(null);\n//   const onEnd = () => {\n//     // You could do something here after speaking has finished\n//   };\n//   const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n//     onEnd,\n//   });\n//\n//   const voice = voices[voiceIndex] || null;\n//\n//   const styleFlexRow = { display: \"flex\", flexDirection: \"row\" };\n//   const styleContainerRatePitch = {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     marginBottom: 12,\n//   };\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Text to Speech\n//         </h1>\n//       </div>\n//       <form>\n//         {!supported && (\n//           <p>\n//             Oh no, it looks like your browser doesn&#39;t support Speech\n//             Synthesis.\n//           </p>\n//         )}\n//         {supported && (\n//           <React.Fragment>\n//             <div className=\"column\">\n//               <div className=\"row m-2 p-2\" style={{ textAlign: \"center\" }}>\n//                 <p>\n//                   {`Type a message below then click 'Speak'\n//                 and SpeechSynthesis will read it out.`}\n//                 </p>\n//                 <div style={{ display: \"none\" }}>\n//                   <label htmlFor=\"voice\">Voice</label>\n//                   <select\n//                     id=\"voice\"\n//                     name=\"voice\"\n//                     value={voiceIndex || \"\"}\n//                     onChange={(event) => {\n//                       setVoiceIndex(event.target.value);\n//                     }}\n//                   >\n//                     <option value=\"\">Default</option>\n//                     {voices.map((option, index) => (\n//                       <option key={option.voiceURI} value={index}>\n//                         {`${option.lang} - ${option.name}`}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div className=\"col-9 row\">\n//                   <div className=\"col-6 px-5\" style={styleContainerRatePitch}>\n//                     <div style={styleFlexRow}>\n//                       <label htmlFor=\"rate\">Rate: </label>\n//                       <div className=\"rate-value\">{rate}</div>\n//                     </div>\n//                     <input\n//                       type=\"range\"\n//                       min=\"0.5\"\n//                       max=\"2\"\n//                       defaultValue=\"1\"\n//                       step=\"0.1\"\n//                       id=\"rate\"\n//                       onChange={(event) => {\n//                         setRate(event.target.value);\n//                       }}\n//                     />\n//                   </div>\n//                   <div className=\"col-6 px-5\" style={styleContainerRatePitch}>\n//                     <div style={styleFlexRow}>\n//                       <label htmlFor=\"pitch\">Pitch: </label>\n//                       <div className=\"pitch-value\">{pitch}</div>\n//                     </div>\n//                     <input\n//                       type=\"range\"\n//                       min=\"0\"\n//                       max=\"2\"\n//                       defaultValue=\"1\"\n//                       step=\"0.1\"\n//                       id=\"pitch\"\n//                       onChange={(event) => {\n//                         setPitch(event.target.value);\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div\n//                   className=\"col-9\"\n//                   style={{\n//                     border: \"4px solid #f8f9fa\",\n//                     backgroundColor: \"#f8f9fa\",\n//                   }}\n//                 >\n//                   <label htmlFor=\"message\">Message</label>\n//                   <br />\n//                   <textarea\n//                     style={{\n//                       width: \"100%\",\n//                       minHeight: \"150px\",\n//                       fontSize: \"17px\",\n//                       backgroundColor: \"#f8f9fa\",\n//                     }}\n//                     id=\"message\"\n//                     name=\"message\"\n//                     placeholder=\"Please type message you want to make speek it out.\"\n//                     rows={3}\n//                     value={text}\n//                     onChange={(event) => {\n//                       setText(event.target.value);\n//                     }}\n//                   />\n//                 </div>\n//                 <div className=\"col-3\">\n//                   {speaking ? (\n//                     <button\n//                       className=\"btn btn-secondary m-2 p-2\"\n//                       style={{ width: \"100%\", height: \"90%\" }}\n//                       type=\"button\"\n//                       onClick={cancel}\n//                     >\n//                       Stop\n//                     </button>\n//                   ) : (\n//                     <button\n//                       className=\"btn btn-success m-2 p-2\"\n//                       style={{ width: \"100%\", height: \"90%\" }}\n//                       type=\"button\"\n//                       onClick={() => speak({ text, voice, rate, pitch })}\n//                     >\n//                       Speak\n//                     </button>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </React.Fragment>\n//         )}\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default TextToSpeech;\n\n/////////////////////////////////////////////\n\nimport React, { useState } from \"react\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TextToSpeech = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n  const onEnd = () => {\n    // You could do something here after speaking has finished\n  };\n  const {\n    speak,\n    cancel,\n    speaking,\n    supported,\n    voices\n  } = useSpeechSynthesis({\n    onEnd\n  });\n  const voice = voices[voiceIndex] || null;\n  const styleFlexRow = {\n    display: \"flex\",\n    flexDirection: \"row\"\n  };\n  const styleContainerRatePitch = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 12\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"phone-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone-screen\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"assistant-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assistant-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Text to Speech\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assistant-body\",\n              children: [!supported && /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Oh no, it looks like your browser doesn't support Speech Synthesis.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), supported && /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row m-2 p-2\",\n                    style: {\n                      textAlign: \"center\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: `Type a message below then click 'Speak'\n                          and SpeechSynthesis will read it out.`\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 220,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      style: {\n                        display: \"none\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"voice\",\n                        children: \"Voice\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                        id: \"voice\",\n                        name: \"voice\",\n                        value: voiceIndex || \"\",\n                        onChange: event => {\n                          setVoiceIndex(event.target.value);\n                        },\n                        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                          value: \"\",\n                          children: \"Default\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 234,\n                          columnNumber: 29\n                        }, this), voices.map((option, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: index,\n                          children: `${option.lang} - ${option.name}`\n                        }, option.voiceURI, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 236,\n                          columnNumber: 31\n                        }, this))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 226,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-9 row\",\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-6 px-5\",\n                        style: styleContainerRatePitch,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: styleFlexRow,\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"rate\",\n                            children: \"Rate: \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 248,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"rate-value\",\n                            children: rate\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 247,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"range\",\n                          min: \"0.5\",\n                          max: \"2\",\n                          defaultValue: \"1\",\n                          step: \"0.1\",\n                          id: \"rate\",\n                          onChange: event => {\n                            setRate(event.target.value);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 251,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 243,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"col-6 px-5\",\n                        style: styleContainerRatePitch,\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          style: styleFlexRow,\n                          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                            htmlFor: \"pitch\",\n                            children: \"Pitch: \"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 268,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                            className: \"pitch-value\",\n                            children: pitch\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 269,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 267,\n                          columnNumber: 29\n                        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                          type: \"range\",\n                          min: \"0\",\n                          max: \"2\",\n                          defaultValue: \"1\",\n                          step: \"0.1\",\n                          id: \"pitch\",\n                          onChange: event => {\n                            setPitch(event.target.value);\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 271,\n                          columnNumber: 29\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 263,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 242,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-9\",\n                      style: {\n                        border: \"4px solid #f8f9fa\",\n                        backgroundColor: \"#f8f9fa\"\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        htmlFor: \"message\",\n                        children: \"Message\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 291,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 292,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                        style: {\n                          width: \"100%\",\n                          minHeight: \"150px\",\n                          fontSize: \"17px\",\n                          backgroundColor: \"#f8f9fa\"\n                        },\n                        id: \"message\",\n                        name: \"message\",\n                        placeholder: \"Please type message you want to make speek it out.\",\n                        rows: 3,\n                        value: text,\n                        onChange: event => {\n                          setText(event.target.value);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 293,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 284,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"col-3\",\n                      children: speaking ? /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-secondary m-2 p-2\",\n                        style: {\n                          width: \"100%\",\n                          height: \"90%\"\n                        },\n                        type: \"button\",\n                        onClick: cancel,\n                        children: \"Stop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 29\n                      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-success m-2 p-2\",\n                        style: {\n                          width: \"100%\",\n                          height: \"90%\"\n                        },\n                        type: \"button\",\n                        onClick: () => speak({\n                          text,\n                          voice,\n                          rate,\n                          pitch\n                        }),\n                        children: \"Speak\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 216,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .phone-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\n        }\n        .phone {\n          position: relative;\n          width: 300px;\n          height: 600px;\n          background: #000;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n        }\n        .phone-screen {\n          position: relative;\n          width: 100%;\n          height: 80%;\n          background: #fff;\n          overflow-y: auto;\n          padding: 20px;\n        }\n        .assistant-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100%;\n        }\n        .assistant-content {\n          text-align: center;\n        }\n        .assistant-title {\n          font-family: Georgia, Times, serif;\n          font-size: 32px;\n          font-weight: bolder;\n          margin-bottom: 20px;\n        }\n        .assistant-body {\n          margin-top: 20px;\n        }\n        .listening-btn {\n          background-color: #f00;\n          color: #fff;\n          border: none;\n          border-radius: 5px;\n          padding: 10px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n        .listening-btn.listening {\n          background-color: #00f;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 198,\n    columnNumber: 5\n  }, this);\n};\n_s(TextToSpeech, \"5IttgKj/ionrc1bdDeRXg/LBnu8=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = TextToSpeech;\nexport default TextToSpeech;\nvar _c;\n$RefreshReg$(_c, \"TextToSpeech\");","map":{"version":3,"names":["React","useState","useSpeechSynthesis","jsxDEV","_jsxDEV","TextToSpeech","_s","text","setText","pitch","setPitch","rate","setRate","voiceIndex","setVoiceIndex","onEnd","speak","cancel","speaking","supported","voices","voice","styleFlexRow","display","flexDirection","styleContainerRatePitch","marginBottom","className","children","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","style","textAlign","htmlFor","id","name","value","onChange","event","target","map","option","index","lang","voiceURI","type","min","max","defaultValue","step","border","backgroundColor","width","minHeight","fontSize","placeholder","rows","height","onClick","jsx","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/textToSpeech.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const TextToSpeech = () => {\n//   const [text, setText] = useState(\"\");\n//   const [pitch, setPitch] = useState(1);\n//   const [rate, setRate] = useState(1);\n//   const [voiceIndex, setVoiceIndex] = useState(null);\n//   const onEnd = () => {\n//     // You could do something here after speaking has finished\n//   };\n//   const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n//     onEnd,\n//   });\n//\n//   const voice = voices[voiceIndex] || null;\n//\n//   const styleFlexRow = { display: \"flex\", flexDirection: \"row\" };\n//   const styleContainerRatePitch = {\n//     display: \"flex\",\n//     flexDirection: \"column\",\n//     marginBottom: 12,\n//   };\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Text to Speech\n//         </h1>\n//       </div>\n//       <form>\n//         {!supported && (\n//           <p>\n//             Oh no, it looks like your browser doesn&#39;t support Speech\n//             Synthesis.\n//           </p>\n//         )}\n//         {supported && (\n//           <React.Fragment>\n//             <div className=\"column\">\n//               <div className=\"row m-2 p-2\" style={{ textAlign: \"center\" }}>\n//                 <p>\n//                   {`Type a message below then click 'Speak'\n//                 and SpeechSynthesis will read it out.`}\n//                 </p>\n//                 <div style={{ display: \"none\" }}>\n//                   <label htmlFor=\"voice\">Voice</label>\n//                   <select\n//                     id=\"voice\"\n//                     name=\"voice\"\n//                     value={voiceIndex || \"\"}\n//                     onChange={(event) => {\n//                       setVoiceIndex(event.target.value);\n//                     }}\n//                   >\n//                     <option value=\"\">Default</option>\n//                     {voices.map((option, index) => (\n//                       <option key={option.voiceURI} value={index}>\n//                         {`${option.lang} - ${option.name}`}\n//                       </option>\n//                     ))}\n//                   </select>\n//                 </div>\n//                 <div className=\"col-9 row\">\n//                   <div className=\"col-6 px-5\" style={styleContainerRatePitch}>\n//                     <div style={styleFlexRow}>\n//                       <label htmlFor=\"rate\">Rate: </label>\n//                       <div className=\"rate-value\">{rate}</div>\n//                     </div>\n//                     <input\n//                       type=\"range\"\n//                       min=\"0.5\"\n//                       max=\"2\"\n//                       defaultValue=\"1\"\n//                       step=\"0.1\"\n//                       id=\"rate\"\n//                       onChange={(event) => {\n//                         setRate(event.target.value);\n//                       }}\n//                     />\n//                   </div>\n//                   <div className=\"col-6 px-5\" style={styleContainerRatePitch}>\n//                     <div style={styleFlexRow}>\n//                       <label htmlFor=\"pitch\">Pitch: </label>\n//                       <div className=\"pitch-value\">{pitch}</div>\n//                     </div>\n//                     <input\n//                       type=\"range\"\n//                       min=\"0\"\n//                       max=\"2\"\n//                       defaultValue=\"1\"\n//                       step=\"0.1\"\n//                       id=\"pitch\"\n//                       onChange={(event) => {\n//                         setPitch(event.target.value);\n//                       }}\n//                     />\n//                   </div>\n//                 </div>\n//                 <div\n//                   className=\"col-9\"\n//                   style={{\n//                     border: \"4px solid #f8f9fa\",\n//                     backgroundColor: \"#f8f9fa\",\n//                   }}\n//                 >\n//                   <label htmlFor=\"message\">Message</label>\n//                   <br />\n//                   <textarea\n//                     style={{\n//                       width: \"100%\",\n//                       minHeight: \"150px\",\n//                       fontSize: \"17px\",\n//                       backgroundColor: \"#f8f9fa\",\n//                     }}\n//                     id=\"message\"\n//                     name=\"message\"\n//                     placeholder=\"Please type message you want to make speek it out.\"\n//                     rows={3}\n//                     value={text}\n//                     onChange={(event) => {\n//                       setText(event.target.value);\n//                     }}\n//                   />\n//                 </div>\n//                 <div className=\"col-3\">\n//                   {speaking ? (\n//                     <button\n//                       className=\"btn btn-secondary m-2 p-2\"\n//                       style={{ width: \"100%\", height: \"90%\" }}\n//                       type=\"button\"\n//                       onClick={cancel}\n//                     >\n//                       Stop\n//                     </button>\n//                   ) : (\n//                     <button\n//                       className=\"btn btn-success m-2 p-2\"\n//                       style={{ width: \"100%\", height: \"90%\" }}\n//                       type=\"button\"\n//                       onClick={() => speak({ text, voice, rate, pitch })}\n//                     >\n//                       Speak\n//                     </button>\n//                   )}\n//                 </div>\n//               </div>\n//             </div>\n//           </React.Fragment>\n//         )}\n//       </form>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default TextToSpeech;\n\n\n\n/////////////////////////////////////////////\n\n\nimport React, { useState } from \"react\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst TextToSpeech = () => {\n  const [text, setText] = useState(\"\");\n  const [pitch, setPitch] = useState(1);\n  const [rate, setRate] = useState(1);\n  const [voiceIndex, setVoiceIndex] = useState(null);\n  const onEnd = () => {\n    // You could do something here after speaking has finished\n  };\n  const { speak, cancel, speaking, supported, voices } = useSpeechSynthesis({\n    onEnd,\n  });\n\n  const voice = voices[voiceIndex] || null;\n\n  const styleFlexRow = { display: \"flex\", flexDirection: \"row\" };\n  const styleContainerRatePitch = {\n    display: \"flex\",\n    flexDirection: \"column\",\n    marginBottom: 12,\n  };\n\n  return (\n    <div className=\"phone-container\">\n      <div className=\"phone\">\n        <div className=\"phone-screen\">\n          <div className=\"assistant-container\">\n            <div className=\"assistant-content\">\n              <div className=\"assistant-title\">\n                <h1>Text to Speech</h1>\n              </div>\n              <div className=\"assistant-body\">\n                {!supported && (\n                  <p>\n                    Oh no, it looks like your browser doesn&#39;t support\n                    Speech Synthesis.\n                  </p>\n                )}\n                {supported && (\n                  <React.Fragment>\n                    <div className=\"column\">\n                      <div\n                        className=\"row m-2 p-2\"\n                        style={{ textAlign: \"center\" }}\n                      >\n                        <p>\n                          {`Type a message below then click 'Speak'\n                          and SpeechSynthesis will read it out.`}\n                        </p>\n                        <div style={{ display: \"none\" }}>\n                          <label htmlFor=\"voice\">Voice</label>\n                          <select\n                            id=\"voice\"\n                            name=\"voice\"\n                            value={voiceIndex || \"\"}\n                            onChange={(event) => {\n                              setVoiceIndex(event.target.value);\n                            }}\n                          >\n                            <option value=\"\">Default</option>\n                            {voices.map((option, index) => (\n                              <option key={option.voiceURI} value={index}>\n                                {`${option.lang} - ${option.name}`}\n                              </option>\n                            ))}\n                          </select>\n                        </div>\n                        <div className=\"col-9 row\">\n                          <div\n                            className=\"col-6 px-5\"\n                            style={styleContainerRatePitch}\n                          >\n                            <div style={styleFlexRow}>\n                              <label htmlFor=\"rate\">Rate: </label>\n                              <div className=\"rate-value\">{rate}</div>\n                            </div>\n                            <input\n                              type=\"range\"\n                              min=\"0.5\"\n                              max=\"2\"\n                              defaultValue=\"1\"\n                              step=\"0.1\"\n                              id=\"rate\"\n                              onChange={(event) => {\n                                setRate(event.target.value);\n                              }}\n                            />\n                          </div>\n                          <div\n                            className=\"col-6 px-5\"\n                            style={styleContainerRatePitch}\n                          >\n                            <div style={styleFlexRow}>\n                              <label htmlFor=\"pitch\">Pitch: </label>\n                              <div className=\"pitch-value\">{pitch}</div>\n                            </div>\n                            <input\n                              type=\"range\"\n                              min=\"0\"\n                              max=\"2\"\n                              defaultValue=\"1\"\n                              step=\"0.1\"\n                              id=\"pitch\"\n                              onChange={(event) => {\n                                setPitch(event.target.value);\n                              }}\n                            />\n                          </div>\n                        </div>\n                        <div\n                          className=\"col-9\"\n                          style={{\n                            border: \"4px solid #f8f9fa\",\n                            backgroundColor: \"#f8f9fa\",\n                          }}\n                        >\n                          <label htmlFor=\"message\">Message</label>\n                          <br />\n                          <textarea\n                            style={{\n                              width: \"100%\",\n                              minHeight: \"150px\",\n                              fontSize: \"17px\",\n                              backgroundColor: \"#f8f9fa\",\n                            }}\n                            id=\"message\"\n                            name=\"message\"\n                            placeholder=\"Please type message you want to make speek it out.\"\n                            rows={3}\n                            value={text}\n                            onChange={(event) => {\n                              setText(event.target.value);\n                            }}\n                          />\n                        </div>\n                        <div className=\"col-3\">\n                          {speaking ? (\n                            <button\n                              className=\"btn btn-secondary m-2 p-2\"\n                              style={{ width: \"100%\", height: \"90%\" }}\n                              type=\"button\"\n                              onClick={cancel}\n                            >\n                              Stop\n                            </button>\n                          ) : (\n                            <button\n                              className=\"btn btn-success m-2 p-2\"\n                              style={{ width: \"100%\", height: \"90%\" }}\n                              type=\"button\"\n                              onClick={() =>\n                                speak({ text, voice, rate, pitch })\n                              }\n                            >\n                              Speak\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    </div>\n                  </React.Fragment>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        .phone-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\n        }\n        .phone {\n          position: relative;\n          width: 300px;\n          height: 600px;\n          background: #000;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n        }\n        .phone-screen {\n          position: relative;\n          width: 100%;\n          height: 80%;\n          background: #fff;\n          overflow-y: auto;\n          padding: 20px;\n        }\n        .assistant-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100%;\n        }\n        .assistant-content {\n          text-align: center;\n        }\n        .assistant-title {\n          font-family: Georgia, Times, serif;\n          font-size: 32px;\n          font-weight: bolder;\n          margin-bottom: 20px;\n        }\n        .assistant-body {\n          margin-top: 20px;\n        }\n        .listening-btn {\n          background-color: #f00;\n          color: #fff;\n          border: none;\n          border-radius: 5px;\n          padding: 10px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n        .listening-btn.listening {\n          background-color: #00f;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default TextToSpeech;\n"],"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"},"metadata":{},"sourceType":"module"}