{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\faceRecognition.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const FaceRecognition = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const [map, setMap] = useState({});\n//   const { speak, cancel } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     var M = {};\n//     for (var i = 0; i < text.length; i++) {\n//       if (!M[text[i]]) M[text[i]] = 1;\n//       else M[text[i]] = M[text[i]] + 1;\n//     }\n//     var xx = \"\";\n//     for (let i = 0; i < Object.keys(M).length; i++) {\n//       if (M[Object.keys(M)[i]])\n//         xx = xx + M[Object.keys(M)[i]] + \" \" + Object.keys(M)[i] + \", \";\n//     }\n//\n//     setMap(M);\n//\n//     console.log(xx);\n//     speak({ text: `This Image contains: ${xx}` });\n//   };\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           FaceRecognition\n//         </h1>\n//       </div>\n//       <FileUpload\n//         setImageInputUrl={setImageInputUrl}\n//         setImageOutputUrl={setImageOutputUrl}\n//         setText={setText}\n//         speak={speakOutput}\n//         url={\"http://localhost:5000//face-recognition\"}\n//       />\n//       <div className=\"container border my-5\">\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\n//           {imageInputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Input Image</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageInputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//           {imageOutputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Result</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageOutputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//         </div>\n//         {text && (\n//           <div\n//             className=\"row\"\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n//           >\n//             <hr />\n//             <h1>Image Contains:</h1>\n//             <hr />\n//             <div\n//               className=\"p-5 m-5\"\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n//             >\n//               {Object.keys(map).map((key) => (\n//                 <h5 key={key}>{`${key}: ${map[key]}`}</h5>\n//               ))}\n//             </div>\n//             <button\n//               className=\"btn btn-success m-2 p-2\"\n//               type=\"button\"\n//               onClick={() => speak({ text: `This Image contains: ${text}` })}\n//             >\n//               Speak\n//             </button>\n//             <button\n//               className=\"btn btn-secondary m-2 p-2\"\n//               type=\"button\"\n//               onClick={cancel}\n//             >\n//               Stop\n//             </button>\n//           </div>\n//         )}\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default FaceRecognition;\n\n/////////////////////////////////////////////////////////////\n\nimport React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FaceRecognition = () => {\n  _s();\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const [map, setMap] = useState({});\n  const {\n    speak,\n    cancel\n  } = useSpeechSynthesis();\n  const speakOutput = text => {\n    const M = {};\n    for (let i = 0; i < text.length; i++) {\n      if (!M[text[i]]) M[text[i]] = 1;else M[text[i]] = M[text[i]] + 1;\n    }\n    let names = Object.keys(M);\n    if (names.length === 0) {\n      speak({\n        text: \"No faces detected\"\n      });\n      return;\n    }\n    let nameList = names.join(\", \");\n    setMap(M);\n    speak({\n      text: `This Image contains: ${nameList}`\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"phone-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"phone\",\n        style: {\n          width: \"85%\",\n          height: \"95%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phone-screen\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"assistant-container\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"assistant-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assistant-title\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  style: {\n                    textShadow: \"1px 1px 2px #000\",\n                    color: \"#003366\"\n                  },\n                  children: \"Face Recognition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"assistant-body\",\n                children: [/*#__PURE__*/_jsxDEV(FileUpload, {\n                  setImageInputUrl: setImageInputUrl,\n                  setImageOutputUrl: setImageOutputUrl,\n                  setText: setText,\n                  speak: speakOutput,\n                  url: \"http://localhost:5000/face-recognition\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"image-container\",\n                  children: [imageInputURL && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"input-image\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Input Image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 188,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: imageInputURL,\n                      alt: \"Input\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 23\n                  }, this), imageOutputURL && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"output-image\",\n                    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                      children: \"Result\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                      src: imageOutputURL,\n                      alt: \"Output\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this), text && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"result\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"Face Identification:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"text-area\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"buttons\",\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"speak-button\",\n                        onClick: () => speakOutput(text),\n                        children: \"Speak\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 204,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"stop-button\",\n                        onClick: cancel,\n                        children: \"Stop\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 207,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"text\",\n                      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n                        className: \"transcription-list\",\n                        children: Object.keys(map).sort().map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n                          children: key\n                        }, key, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        /* Styles go here */\n        .phone-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\n        }\n        .phone {\n          width: 85%;\n          height: 95%;\n          max-width: 750px;\n          background: #333;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n          display: flex;\n          flex-direction: column;\n        }\n        .phone-screen {\n          flex: 1;\n          width: 100%;\n          height: 100%;\n          background: #fff;\n          padding: 20px;\n          display: flex;\n          flex-direction: column;\n          justify-content: center;\n          align-items: center;\n          overflow-y: auto;\n        }\n        .assistant-container {\n          width: 100%;\n          max-width: 400px;\n        }\n        .assistant-content {\n          text-align: center;\n        }\n        .assistant-title {\n          font-size: 28px;\n          margin-bottom: 20px;\n        }\n        .assistant-body {\n          margin-top: 20px;\n        }\n        .image-container {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .input-image,\n        .output-image {\n          flex: 1;\n          text-align: center;\n        }\n        .input-image img,\n        .output-image img {\n          width: 100%;\n          border: 4px solid #d2d2d2;\n          border-radius: 5px;\n        }\n        .result {\n          margin-top: 30px;\n          border-top: 2px solid gray;\n          padding-top: 20px;\n        }\n        .text-area {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        .text {\n          background: rgba(235, 255, 251, 0.8);\n          width: 85%;\n          padding: 20px;\n          border-radius: 5px;\n          margin-bottom: 10px;\n          overflow-y: auto;\n          max-height: 200px;\n        }\n        .transcription-list {\n          padding: 0;\n          margin: 0;\n          list-style-type: none;\n        }\n        .transcription-list li {\n          margin-bottom: 5px;\n        }\n        .buttons {\n          display: flex;\n          justify-content: space-between;\n        }\n        .speak-button,\n        .copy-button,\n        .stop-button {\n          padding: 8px 16px;\n          font-size: 14px;\n          border: none;\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n        .speak-button:hover {\n          background-color: #4caf50;\n        }\n        .copy-button:hover {\n          background-color: #2196f3;\n        }\n        .stop-button {\n          background-color: #f44336;\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n};\n_s(FaceRecognition, \"sMyON0AA4XjwyaydLHZmCQbTg6c=\", false, function () {\n  return [useSpeechSynthesis];\n});\n_c = FaceRecognition;\nexport default FaceRecognition;\nvar _c;\n$RefreshReg$(_c, \"FaceRecognition\");","map":{"version":3,"names":["React","useState","FileUpload","useSpeechSynthesis","jsxDEV","_jsxDEV","FaceRecognition","_s","imageInputURL","setImageInputUrl","imageOutputURL","setImageOutputUrl","text","setText","map","setMap","speak","cancel","speakOutput","M","i","length","names","Object","keys","nameList","join","Fragment","children","className","style","width","height","textShadow","color","fileName","_jsxFileName","lineNumber","columnNumber","url","src","alt","onClick","sort","key","jsx","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/faceRecognition.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\r\n// import FileUpload from \"./FileUpload\";\r\n// import { useSpeechSynthesis } from \"react-speech-kit\";\r\n//\r\n// const FaceRecognition = () => {\r\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\r\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\r\n//   const [text, setText] = useState(\"\");\r\n//   const [map, setMap] = useState({});\r\n//   const { speak, cancel } = useSpeechSynthesis();\r\n//\r\n//   const speakOutput = (text) => {\r\n//     var M = {};\r\n//     for (var i = 0; i < text.length; i++) {\r\n//       if (!M[text[i]]) M[text[i]] = 1;\r\n//       else M[text[i]] = M[text[i]] + 1;\r\n//     }\r\n//     var xx = \"\";\r\n//     for (let i = 0; i < Object.keys(M).length; i++) {\r\n//       if (M[Object.keys(M)[i]])\r\n//         xx = xx + M[Object.keys(M)[i]] + \" \" + Object.keys(M)[i] + \", \";\r\n//     }\r\n//\r\n//     setMap(M);\r\n//\r\n//     console.log(xx);\r\n//     speak({ text: `This Image contains: ${xx}` });\r\n//   };\r\n//\r\n//   return (\r\n//     <React.Fragment>\r\n//       <div\r\n//         className=\"row m-2 p-4\"\r\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\r\n//       >\r\n//         <h1\r\n//           style={{\r\n//             fontFamily: \"Georgia, Times, serif\",\r\n//             fontSize: \"45px\",\r\n//             fontWeight: \"bolder\",\r\n//           }}\r\n//         >\r\n//           FaceRecognition\r\n//         </h1>\r\n//       </div>\r\n//       <FileUpload\r\n//         setImageInputUrl={setImageInputUrl}\r\n//         setImageOutputUrl={setImageOutputUrl}\r\n//         setText={setText}\r\n//         speak={speakOutput}\r\n//         url={\"http://localhost:5000//face-recognition\"}\r\n//       />\r\n//       <div className=\"container border my-5\">\r\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n//           {imageInputURL && (\r\n//             <div className=\"col-6 p-2\">\r\n//               <h3 className=\"display-5\">Input Image</h3>\r\n//               <img\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   border: \"4px solid #d2d2d2\",\r\n//                   borderRadius: \"5px\",\r\n//                 }}\r\n//                 src={imageInputURL}\r\n//                 alt=\"img\"\r\n//               />\r\n//             </div>\r\n//           )}\r\n//           {imageOutputURL && (\r\n//             <div className=\"col-6 p-2\">\r\n//               <h3 className=\"display-5\">Result</h3>\r\n//               <img\r\n//                 style={{\r\n//                   width: \"100%\",\r\n//                   border: \"4px solid #d2d2d2\",\r\n//                   borderRadius: \"5px\",\r\n//                 }}\r\n//                 src={imageOutputURL}\r\n//                 alt=\"img\"\r\n//               />\r\n//             </div>\r\n//           )}\r\n//         </div>\r\n//         {text && (\r\n//           <div\r\n//             className=\"row\"\r\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\r\n//           >\r\n//             <hr />\r\n//             <h1>Image Contains:</h1>\r\n//             <hr />\r\n//             <div\r\n//               className=\"p-5 m-5\"\r\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\r\n//             >\r\n//               {Object.keys(map).map((key) => (\r\n//                 <h5 key={key}>{`${key}: ${map[key]}`}</h5>\r\n//               ))}\r\n//             </div>\r\n//             <button\r\n//               className=\"btn btn-success m-2 p-2\"\r\n//               type=\"button\"\r\n//               onClick={() => speak({ text: `This Image contains: ${text}` })}\r\n//             >\r\n//               Speak\r\n//             </button>\r\n//             <button\r\n//               className=\"btn btn-secondary m-2 p-2\"\r\n//               type=\"button\"\r\n//               onClick={cancel}\r\n//             >\r\n//               Stop\r\n//             </button>\r\n//           </div>\r\n//         )}\r\n//       </div>\r\n//     </React.Fragment>\r\n//   );\r\n// };\r\n//\r\n// export default FaceRecognition;\r\n\r\n\r\n\r\n\r\n\r\n/////////////////////////////////////////////////////////////\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState } from \"react\";\r\nimport FileUpload from \"./FileUpload\";\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\nconst FaceRecognition = () => {\r\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\r\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\r\n  const [text, setText] = useState(\"\");\r\n  const [map, setMap] = useState({});\r\n  const { speak, cancel } = useSpeechSynthesis();\r\n\r\n  const speakOutput = (text) => {\r\n    const M = {};\r\n    for (let i = 0; i < text.length; i++) {\r\n      if (!M[text[i]]) M[text[i]] = 1;\r\n      else M[text[i]] = M[text[i]] + 1;\r\n    }\r\n    let names = Object.keys(M);\r\n\r\n    if (names.length === 0) {\r\n      speak({ text: \"No faces detected\" });\r\n      return;\r\n    }\r\n\r\n    let nameList = names.join(\", \");\r\n\r\n    setMap(M);\r\n\r\n    speak({ text: `This Image contains: ${nameList}` });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"phone-container\">\r\n        <div className=\"phone\" style={{ width: \"85%\", height: \"95%\" }}>\r\n          <div className=\"phone-screen\">\r\n            <div className=\"assistant-container\">\r\n              <div className=\"assistant-content\">\r\n                <div className=\"assistant-title\">\r\n                  <h1 style={{ textShadow: \"1px 1px 2px #000\", color: \"#003366\" }}>\r\n                    Face Recognition\r\n                  </h1>\r\n                </div>\r\n                <div className=\"assistant-body\">\r\n                  <FileUpload\r\n                    setImageInputUrl={setImageInputUrl}\r\n                    setImageOutputUrl={setImageOutputUrl}\r\n                    setText={setText}\r\n                    speak={speakOutput}\r\n                    url={\"http://localhost:5000/face-recognition\"}\r\n                  />\r\n                  <div className=\"image-container\">\r\n                    {imageInputURL && (\r\n                      <div className=\"input-image\">\r\n                        <h3>Input Image</h3>\r\n                        <img src={imageInputURL} alt=\"Input\" />\r\n                      </div>\r\n                    )}\r\n                    {imageOutputURL && (\r\n                      <div className=\"output-image\">\r\n                        <h3>Result</h3>\r\n                        <img src={imageOutputURL} alt=\"Output\" />\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                  {text && (\r\n                    <div className=\"result\">\r\n                      <h3>Face Identification:</h3>\r\n                      <div className=\"text-area\">\r\n                        <div className=\"buttons\">\r\n                          <button className=\"speak-button\" onClick={() => speakOutput(text)}>\r\n                            Speak\r\n                          </button>\r\n                          <button className=\"stop-button\" onClick={cancel}>\r\n                            Stop\r\n                          </button>\r\n                        </div>\r\n                        <div className=\"text\">\r\n                          <ul className=\"transcription-list\">\r\n                            {Object.keys(map)\r\n                              .sort()\r\n                              .map((key) => (\r\n                                <li key={key}>{key}</li>\r\n                              ))}\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <style jsx>{`\r\n        /* Styles go here */\r\n        .phone-container {\r\n          display: flex;\r\n          justify-content: center;\r\n          align-items: center;\r\n          height: 100vh;\r\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\r\n        }\r\n        .phone {\r\n          width: 85%;\r\n          height: 95%;\r\n          max-width: 750px;\r\n          background: #333;\r\n          border-radius: 20px;\r\n          overflow: hidden;\r\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\r\n          display: flex;\r\n          flex-direction: column;\r\n        }\r\n        .phone-screen {\r\n          flex: 1;\r\n          width: 100%;\r\n          height: 100%;\r\n          background: #fff;\r\n          padding: 20px;\r\n          display: flex;\r\n          flex-direction: column;\r\n          justify-content: center;\r\n          align-items: center;\r\n          overflow-y: auto;\r\n        }\r\n        .assistant-container {\r\n          width: 100%;\r\n          max-width: 400px;\r\n        }\r\n        .assistant-content {\r\n          text-align: center;\r\n        }\r\n        .assistant-title {\r\n          font-size: 28px;\r\n          margin-bottom: 20px;\r\n        }\r\n        .assistant-body {\r\n          margin-top: 20px;\r\n        }\r\n        .image-container {\r\n          display: flex;\r\n          justify-content: space-between;\r\n          margin-bottom: 20px;\r\n        }\r\n        .input-image,\r\n        .output-image {\r\n          flex: 1;\r\n          text-align: center;\r\n        }\r\n        .input-image img,\r\n        .output-image img {\r\n          width: 100%;\r\n          border: 4px solid #d2d2d2;\r\n          border-radius: 5px;\r\n        }\r\n        .result {\r\n          margin-top: 30px;\r\n          border-top: 2px solid gray;\r\n          padding-top: 20px;\r\n        }\r\n        .text-area {\r\n          display: flex;\r\n          flex-direction: column;\r\n          align-items: center;\r\n        }\r\n        .text {\r\n          background: rgba(235, 255, 251, 0.8);\r\n          width: 85%;\r\n          padding: 20px;\r\n          border-radius: 5px;\r\n          margin-bottom: 10px;\r\n          overflow-y: auto;\r\n          max-height: 200px;\r\n        }\r\n        .transcription-list {\r\n          padding: 0;\r\n          margin: 0;\r\n          list-style-type: none;\r\n        }\r\n        .transcription-list li {\r\n          margin-bottom: 5px;\r\n        }\r\n        .buttons {\r\n          display: flex;\r\n          justify-content: space-between;\r\n        }\r\n        .speak-button,\r\n        .copy-button,\r\n        .stop-button {\r\n          padding: 8px 16px;\r\n          font-size: 14px;\r\n          border: none;\r\n          border-radius: 5px;\r\n          cursor: pointer;\r\n          transition: background-color 0.3s ease;\r\n        }\r\n        .speak-button:hover {\r\n          background-color: #4caf50;\r\n        }\r\n        .copy-button:hover {\r\n          background-color: #2196f3;\r\n        }\r\n        .stop-button {\r\n          background-color: #f44336;\r\n        }\r\n      `}</style>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default FaceRecognition;\r\n\r\n"],"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"},"metadata":{},"sourceType":"module"}