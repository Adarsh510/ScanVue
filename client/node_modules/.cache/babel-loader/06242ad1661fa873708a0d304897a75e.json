{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\ScanVue\\\\client\\\\src\\\\components\\\\assistant.jsx\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n//\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   //   SpeechRecognition.startListening({ continuous: true });\n//   const { speak } = useSpeechSynthesis();\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         }else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         }else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//\n//         console.log(\"hii\");\n//       },\n//       //   matchInterim: true,\n//     },\n//     // {\n//     //   command: \"*\",\n//     //   callback: () => {\n//     //     speak({ text: \"Please repeat\" });\n//\n//     //     console.log(\"repeat\");\n//     //   },\n//     // },\n//   ];\n//   const { transcript: t1 } = useSpeechRecognition({ commands });\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n// {/*         <div>Say \"Hey Jarvis\"</div> */}\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button onClick={SpeechRecognition.startListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button onClick={SpeechRecognition.stopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default Assistant;\n\n////////////////////////////////////////////////////////////////////////////\n\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   const { speak } = useSpeechSynthesis();\n//   const { transcript: t1 } = useSpeechRecognition();\n//\n//   const handleStartListening = () => {\n//     SpeechRecognition.startListening({ continuous: true });\n//   };\n//\n//   const handleStopListening = () => {\n//     SpeechRecognition.stopListening();\n//   };\n//\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         } else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         } else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//         console.log(\"Hi\");\n//       },\n//     },\n//   ];\n//\n//   return (\n//     <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//             textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button className=\"btn btn-primary\" onClick={handleStartListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button className=\"btn btn-danger\" onClick={handleStopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n//\n// export default Assistant;\n\nimport React from \"react\";\nimport SpeechRecognition, { useSpeechRecognition } from \"react-speech-recognition\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Assistant = () => {\n  _s();\n  const history = useHistory();\n  const {\n    speak\n  } = useSpeechSynthesis();\n  const {\n    transcript: t1\n  } = useSpeechRecognition();\n  const handleStartListening = () => {\n    SpeechRecognition.startListening({\n      continuous: true\n    });\n  };\n  const handleStopListening = () => {\n    SpeechRecognition.stopListening();\n  };\n  const commands = [{\n    command: \"Go to *\",\n    callback: link => {\n      const x = `Redirect to: ${link}`;\n      console.log(x);\n      if (link === \"object detection\") {\n        speak({\n          text: x\n        });\n        history.push(`/object-detection`);\n      } else if (link === \"face recognition\") {\n        speak({\n          text: x\n        });\n        history.push(`/face-recognition`);\n      } else if (link === \"image to text\") {\n        speak({\n          text: x\n        });\n        history.push(`/image-to-text`);\n      } else if (link === \"text to speech\") {\n        speak({\n          text: x\n        });\n        history.push(`/text-to-speech`);\n      } else if (link === \"speech to text\") {\n        speak({\n          text: x\n        });\n        history.push(`/speech-to-text`);\n      } else if (link === \"home\") {\n        speak({\n          text: x\n        });\n        history.push(`/`);\n      } else {\n        speak({\n          text: \"I don't get it, Please try again!\"\n        });\n      }\n    }\n  }, {\n    command: \"Hey Jarvis\",\n    callback: () => {\n      speak({\n        text: \"Hi Sir\"\n      });\n      console.log(\"Hi\");\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      textAlign: \"center\",\n      height: \"100vh\",\n      overflow: \"hidden\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row m-2 p-4\",\n      style: {\n        background: \"linear-gradient(to bottom, #66ccff 0%, #003399 100%)\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: \"Arial, sans-serif\",\n          fontSize: \"45px\",\n          fontWeight: \"bolder\",\n          textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\"\n        },\n        children: \"Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        border: \"10px solid gray\",\n        padding: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Say \\\"Hey Jarvis\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: t1 ? t1 : \"Start listening for transcript\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary\",\n        onClick: handleStartListening,\n        children: \"Start listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-danger\",\n        onClick: handleStopListening,\n        children: \"Stop listening\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 254,\n    columnNumber: 5\n  }, this);\n};\n_s(Assistant, \"RrbyWvuizjVUQSCZy/y0BGy51/s=\", false, function () {\n  return [useHistory, useSpeechSynthesis, useSpeechRecognition];\n});\n_c = Assistant;\nexport default Assistant;\nvar _c;\n$RefreshReg$(_c, \"Assistant\");","map":{"version":3,"names":["React","SpeechRecognition","useSpeechRecognition","useHistory","useSpeechSynthesis","jsxDEV","_jsxDEV","Assistant","_s","history","speak","transcript","t1","handleStartListening","startListening","continuous","handleStopListening","stopListening","commands","command","callback","link","x","console","log","text","push","style","textAlign","height","overflow","children","className","background","fontFamily","fontSize","fontWeight","textShadow","fileName","_jsxFileName","lineNumber","columnNumber","border","padding","onClick","_c","$RefreshReg$"],"sources":["D:/PROJECTS/ScanVue/client/src/components/assistant.jsx"],"sourcesContent":["// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n//\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   //   SpeechRecognition.startListening({ continuous: true });\n//   const { speak } = useSpeechSynthesis();\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         }else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         }else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//\n//         console.log(\"hii\");\n//       },\n//       //   matchInterim: true,\n//     },\n//     // {\n//     //   command: \"*\",\n//     //   callback: () => {\n//     //     speak({ text: \"Please repeat\" });\n//\n//     //     console.log(\"repeat\");\n//     //   },\n//     // },\n//   ];\n//   const { transcript: t1 } = useSpeechRecognition({ commands });\n//\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n// {/*         <div>Say \"Hey Jarvis\"</div> */}\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button onClick={SpeechRecognition.startListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button onClick={SpeechRecognition.stopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n//\n// export default Assistant;\n\n\n////////////////////////////////////////////////////////////////////////////\n\n// import React from \"react\";\n// import SpeechRecognition, {\n//   useSpeechRecognition,\n// } from \"react-speech-recognition\";\n// import { useHistory } from \"react-router-dom\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const Assistant = () => {\n//   const history = useHistory();\n//   const { speak } = useSpeechSynthesis();\n//   const { transcript: t1 } = useSpeechRecognition();\n//\n//   const handleStartListening = () => {\n//     SpeechRecognition.startListening({ continuous: true });\n//   };\n//\n//   const handleStopListening = () => {\n//     SpeechRecognition.stopListening();\n//   };\n//\n//   const commands = [\n//     {\n//       command: \"Go to *\",\n//       callback: (link) => {\n//         const x = `Redirect to: ${link}`;\n//         console.log(x);\n//         if (link === \"object detection\") {\n//           speak({ text: x });\n//           history.push(`/object-detection`);\n//         } else if (link === \"face recognition\") {\n//           speak({ text: x });\n//           history.push(`/face-recognition`);\n//         } else if (link === \"image to text\") {\n//           speak({ text: x });\n//           history.push(`/image-to-text`);\n//         } else if (link === \"text to speech\") {\n//           speak({ text: x });\n//           history.push(`/text-to-speech`);\n//         } else if (link === \"speech to text\") {\n//           speak({ text: x });\n//           history.push(`/speech-to-text`);\n//         } else if (link === \"home\") {\n//           speak({ text: x });\n//           history.push(`/`);\n//         } else {\n//           speak({ text: \"I don't get it, Please try again!\" });\n//         }\n//       },\n//     },\n//     {\n//       command: \"Hey Jarvis\",\n//       callback: () => {\n//         speak({ text: \"Hi Sir\" });\n//         console.log(\"Hi\");\n//       },\n//     },\n//   ];\n//\n//   return (\n//     <div style={{ textAlign: \"center\", fontFamily: \"Arial\" }}>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//             textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n//           }}\n//         >\n//           Assistant\n//         </h1>\n//       </div>\n//       <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n//         <h3>Say \"Hey Jarvis\"</h3>\n//         <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n//         <button className=\"btn btn-primary\" onClick={handleStartListening}>\n//           Start listening\n//         </button>\n//         &nbsp;\n//         <button className=\"btn btn-danger\" onClick={handleStopListening}>\n//           Stop listening\n//         </button>\n//       </div>\n//     </div>\n//   );\n// };\n//\n// export default Assistant;\n\n\n\n\n\n\nimport React from \"react\";\nimport SpeechRecognition, {\n  useSpeechRecognition,\n} from \"react-speech-recognition\";\nimport { useHistory } from \"react-router-dom\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst Assistant = () => {\n  const history = useHistory();\n  const { speak } = useSpeechSynthesis();\n  const { transcript: t1 } = useSpeechRecognition();\n\n  const handleStartListening = () => {\n    SpeechRecognition.startListening({ continuous: true });\n  };\n\n  const handleStopListening = () => {\n    SpeechRecognition.stopListening();\n  };\n\n  const commands = [\n    {\n      command: \"Go to *\",\n      callback: (link) => {\n        const x = `Redirect to: ${link}`;\n        console.log(x);\n        if (link === \"object detection\") {\n          speak({ text: x });\n          history.push(`/object-detection`);\n        } else if (link === \"face recognition\") {\n          speak({ text: x });\n          history.push(`/face-recognition`);\n        } else if (link === \"image to text\") {\n          speak({ text: x });\n          history.push(`/image-to-text`);\n        } else if (link === \"text to speech\") {\n          speak({ text: x });\n          history.push(`/text-to-speech`);\n        } else if (link === \"speech to text\") {\n          speak({ text: x });\n          history.push(`/speech-to-text`);\n        } else if (link === \"home\") {\n          speak({ text: x });\n          history.push(`/`);\n        } else {\n          speak({ text: \"I don't get it, Please try again!\" });\n        }\n      },\n    },\n    {\n      command: \"Hey Jarvis\",\n      callback: () => {\n        speak({ text: \"Hi Sir\" });\n        console.log(\"Hi\");\n      },\n    },\n  ];\n\n  return (\n    <div style={{ textAlign: \"center\", height: \"100vh\", overflow: \"hidden\" }}>\n      <div\n        className=\"row m-2 p-4\"\n        style={{\n          background:\n            \"linear-gradient(to bottom, #66ccff 0%, #003399 100%)\",\n          textAlign: \"center\",\n        }}\n      >\n        <h1\n          style={{\n            fontFamily: \"Arial, sans-serif\",\n            fontSize: \"45px\",\n            fontWeight: \"bolder\",\n            textShadow: \"2px 2px 4px rgba(0, 0, 0, 0.5)\",\n          }}\n        >\n          Assistant\n        </h1>\n      </div>\n      <div style={{ border: \"10px solid gray\", padding: \"10px\" }}>\n        <h3>Say \"Hey Jarvis\"</h3>\n        <p>{t1 ? t1 : \"Start listening for transcript\"}</p>\n        <button className=\"btn btn-primary\" onClick={handleStartListening}>\n          Start listening\n        </button>\n        &nbsp;\n        <button className=\"btn btn-danger\" onClick={handleStopListening}>\n          Stop listening\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Assistant;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,iBAAiB,IACtBC,oBAAoB,QACf,0BAA0B;AACjC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,kBAAkB,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAMC,OAAO,GAAGN,UAAU,CAAC,CAAC;EAC5B,MAAM;IAAEO;EAAM,CAAC,GAA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"},"metadata":{},"sourceType":"module"}