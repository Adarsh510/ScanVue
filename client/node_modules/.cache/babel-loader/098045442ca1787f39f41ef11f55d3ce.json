{"ast":null,"code":"// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ImageToText = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const { speak, cancel, speaking } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     speak({ text: `This Image contains: ${text}` });\n//   };\n//\n//   // speak({ text: \"hi\" });\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Image To Text\n//         </h1>\n//       </div>\n//       <FileUpload\n//         setImageInputUrl={setImageInputUrl}\n//         setImageOutputUrl={setImageOutputUrl}\n//         setText={setText}\n//         speak={speakOutput}\n//         url={\"http://localhost:5000/image-to-text\"}\n//       />\n//       <div className=\"container border my-5\">\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\n//           {imageInputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Input Image</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageInputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//           {imageOutputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Result</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageOutputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//         </div>\n//         {text && (\n//           <div\n//             className=\"row\"\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n//           >\n//             <hr />\n//             <h1>\n//               Image Contains:\n//               {speaking ? (\n//                 <button\n//                   className=\"btn btn-secondary m-2 p-2\"\n//                   type=\"button\"\n//                   onClick={cancel}\n//                 >\n//                   Stop\n//                 </button>\n//               ) : (\n//                 <button\n//                   className=\"btn btn-success m-2 p-2\"\n//                   type=\"button\"\n//                   onClick={() => speak({ text })}\n//                 >\n//                   Speak\n//                 </button>\n//               )}\n//             </h1>\n//             <hr />\n//             <div\n//               className=\"p-5 m-5\"\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n//             >\n//               <h5>{text}</h5>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n// export default ImageToText;\n////////////////////////////////////////////////////\n// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ImageToText = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const { speak, cancel, speaking } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     speak({ text: `This Image contains: ${text}` });\n//   };\n//\n//   return (\n//     <div className=\"phone-container\">\n//       <div className=\"phone\" style={{ width: \"85%\" }}> {/* Increase width by 25% */}\n//         <div className=\"phone-screen\">\n//           <div className=\"assistant-container\">\n//             <div className=\"assistant-content\">\n//               <div className=\"assistant-title\">\n//                 <h1>Image To Text</h1>\n//               </div>\n//               <div className=\"assistant-body\">\n//                 <FileUpload\n//                   setImageInputUrl={setImageInputUrl}\n//                   setImageOutputUrl={setImageOutputUrl}\n//                   setText={setText}\n//                   speak={speakOutput}\n//                   url={\"http://localhost:5000/image-to-text\"}\n//                 />\n//                 {imageInputURL && (\n//                   <div className=\"input-image\">\n//                     <h3>Input Image</h3>\n//                     <img src={imageInputURL} alt=\"Input\" />\n//                   </div>\n//                 )}\n//                 {imageOutputURL && (\n//                   <div className=\"output-image\">\n//                     <h3>Result</h3>\n//                     <img src={imageOutputURL} alt=\"Output\" />\n//                   </div>\n//                 )}\n//                 {text && (\n//                   <div className=\"result\">\n//                     <h3>Image Contains:</h3>\n//                     <div className=\"text-area\">\n//                       <div className=\"text\">{text}</div>\n//                       {speaking ? (\n//                         <button className=\"stop-button\" onClick={cancel}>\n//                           Stop\n//                         </button>\n//                       ) : (\n//                         <button className=\"speak-button\" onClick={() => speak({ text })}>\n//                           Speak\n//                         </button>\n//                       )}\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <style jsx>{`\n//         .phone-container {\n//           display: flex;\n//           justify-content: center;\n//           align-items: center;\n//           height: 100vh;\n//           background: linear-gradient(135deg, #2d75ff, #a8bfff);\n//         }\n//         .phone {\n//           width: 85%; /* Increase width by 25% */\n//           height: 90%; /* Adjust as needed */\n//           max-width: 750px; /* Set maximum width */\n//           max-height: 800px; /* Set maximum height */\n//           background: #333;\n//           border-radius: 20px;\n//           overflow: hidden;\n//           box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n//         }\n//         .phone-screen {\n//           width: 100%;\n//           height: 100%;\n//           background: #fff;\n//           padding: 20px;\n//           display: flex;\n//           justify-content: center;\n//           align-items: center;\n//         }\n//         .assistant-container {\n//           width: 100%;\n//           max-width: 400px;\n//         }\n//         .assistant-content {\n//           text-align: center;\n//         }\n//         .assistant-title {\n//           font-size: 28px;\n//           margin-bottom: 20px;\n//         }\n//         .assistant-body {\n//           margin-top: 20px;\n//         }\n//         .input-image,\n//         .output-image {\n//           margin-top: 20px;\n//           text-align: center;\n//         }\n//         .input-image img,\n//         .output-image img {\n//           width: 100%;\n//           border: 4px solid #d2d2d2;\n//           border-radius: 5px;\n//         }\n//         .result {\n//           margin-top: 30px;\n//           border-top: 2px solid gray;\n//           padding-top: 20px;\n//         }\n//         .text-area {\n//           display: flex;\n//           align-items: center;\n//           justify-content: space-between;\n//           margin-top: 20px;\n//         }\n//         .text {\n//           background: rgba(235, 255, 251, 0.8);\n//           width: 85%;\n//           padding: 20px;\n//           border-radius: 5px;\n//         }\n//         .speak-button,\n//         .stop-button {\n//           padding: 10px 20px;\n//           font-size: 16px;\n//           border: none;\n//           border-radius: 5px;\n//           cursor: pointer;\n//           transition: background-color 0.3s ease;\n//         }\n//         .speak-button:hover {\n//           background-color: #4caf50;\n//         }\n//         .stop-button {\n//           background-color: #f44336;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// };\n//\n// export default ImageToText;\n//////////////////////////////////////////////////////\nimport React,{useState}from\"react\";import FileUpload from\"./FileUpload\";import{useSpeechSynthesis}from\"react-speech-kit\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const ImageToText=()=>{const[imageInputURL,setImageInputUrl]=useState(\"\");const[imageOutputURL,setImageOutputUrl]=useState(\"\");const[text,setText]=useState(\"\");const{speak,cancel,speaking}=useSpeechSynthesis();const speakOutput=text=>{speak({text:\"This Image contains: \".concat(text)});};const handleCopyText=()=>{// Copy text to clipboard\nnavigator.clipboard.writeText(text);// Optionally provide user feedback\nalert(\"Transcript copied to clipboard!\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"phone-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"phone\",style:{width:\"85%\",height:\"95%\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"phone-screen\",children:/*#__PURE__*/_jsx(\"div\",{className:\"assistant-container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"assistant-content\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"assistant-title\",children:/*#__PURE__*/_jsx(\"h1\",{style:{color:\"#004438\",textShadow:\"1px 1px 2px #000000\"},children:\"Image To Text\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"assistant-body\",children:[/*#__PURE__*/_jsx(FileUpload,{setImageInputUrl:setImageInputUrl,setImageOutputUrl:setImageOutputUrl,setText:setText,speak:speakOutput,url:\"http://localhost:5000/image-to-text\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"image-container\",children:[imageInputURL&&/*#__PURE__*/_jsxs(\"div\",{className:\"input-image\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Input Image\"}),/*#__PURE__*/_jsx(\"img\",{src:imageInputURL,alt:\"Input\"})]}),imageOutputURL&&/*#__PURE__*/_jsxs(\"div\",{className:\"output-image\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Result\"}),/*#__PURE__*/_jsx(\"img\",{src:imageOutputURL,alt:\"Output\"})]})]}),text&&/*#__PURE__*/_jsxs(\"div\",{className:\"result\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Transcription:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-area\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"buttons\",children:[speaking?/*#__PURE__*/_jsx(\"button\",{className:\"stop-button\",onClick:cancel,children:\"Stop Speaking\"}):/*#__PURE__*/_jsx(\"button\",{className:\"speak-button\",onClick:()=>speak({text}),children:\"Speak Transcript\"}),/*#__PURE__*/_jsx(\"button\",{className:\"copy-button\",onClick:handleCopyText,children:\"Copy Transcript\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"text\",children:text})]})]})]})]})})})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:\"\\n        /* Styles go here */\\n        .phone-container {\\n          display: flex;\\n          justify-content: center;\\n          align-items: center;\\n          height: 100vh;\\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\\n        }\\n        .phone {\\n          width: 85%;\\n          height: 95%;\\n          max-width: 750px;\\n          background: #333;\\n          border-radius: 20px;\\n          overflow: hidden;\\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\\n        }\\n        .phone-screen {\\n          width: 100%;\\n          height: 100%;\\n          background: #fff;\\n          padding: 20px;\\n          display: flex;\\n          justify-content: center;\\n          align-items: center;\\n        }\\n        .assistant-container {\\n          width: 100%;\\n          max-width: 400px;\\n        }\\n        .assistant-content {\\n          text-align: center;\\n        }\\n        .assistant-title {\\n          font-size: 28px;\\n          margin-bottom: 20px;\\n        }\\n        .assistant-body {\\n          margin-top: 20px;\\n        }\\n        .image-container {\\n          display: flex;\\n          justify-content: space-between;\\n          margin-bottom: 20px;\\n        }\\n        .input-image,\\n        .output-image {\\n          flex: 1;\\n          text-align: center;\\n        }\\n        .input-image img,\\n        .output-image img {\\n          width: 100%;\\n          border: 4px solid #d2d2d2;\\n          border-radius: 5px;\\n        }\\n        .result {\\n          margin-top: 30px;\\n          border-top: 2px solid gray;\\n          padding-top: 20px;\\n        }\\n        .text-area {\\n          display: flex;\\n          flex-direction: column;\\n          align-items: center;\\n        }\\n        .text {\\n          background: rgba(235, 255, 251, 0.8);\\n          width: 85%;\\n          padding: 20px;\\n          border-radius: 5px;\\n          margin-bottom: 10px;\\n        }\\n        .buttons {\\n          display: flex;\\n          justify-content: space-between;\\n        }\\n        .speak-button,\\n        .copy-button,\\n        .stop-button {\\n          padding: 8px 16px;\\n          font-size: 14px;\\n          border: none;\\n          border-radius: 5px;\\n          cursor: pointer;\\n          transition: background-color 0.3s ease;\\n        }\\n        .speak-button:hover {\\n          background-color: #4caf50;\\n        }\\n        .copy-button:hover {\\n          background-color: #2196f3;\\n        }\\n        .stop-button {\\n          background-color: #f44336;\\n        }\\n      \"})]});};export default ImageToText;","map":{"version":3,"names":["React","useState","FileUpload","useSpeechSynthesis","jsx","_jsx","jsxs","_jsxs","ImageToText","imageInputURL","setImageInputUrl","imageOutputURL","setImageOutputUrl","text","setText","speak","cancel","speaking","speakOutput","concat","handleCopyText","navigator","clipboard","writeText","alert","className","children","style","width","height","color","textShadow","url","src","alt","onClick"],"sources":["D:/PROJECTS/ScanVue/client/src/components/imageToText.jsx"],"sourcesContent":["// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ImageToText = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const { speak, cancel, speaking } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     speak({ text: `This Image contains: ${text}` });\n//   };\n//\n//   // speak({ text: \"hi\" });\n//   return (\n//     <React.Fragment>\n//       <div\n//         className=\"row m-2 p-4\"\n//         style={{ background: \"#f5f5f5\", textAlign: \"center\" }}\n//       >\n//         <h1\n//           style={{\n//             fontFamily: \"Georgia, Times, serif\",\n//             fontSize: \"45px\",\n//             fontWeight: \"bolder\",\n//           }}\n//         >\n//           Image To Text\n//         </h1>\n//       </div>\n//       <FileUpload\n//         setImageInputUrl={setImageInputUrl}\n//         setImageOutputUrl={setImageOutputUrl}\n//         setText={setText}\n//         speak={speakOutput}\n//         url={\"http://localhost:5000/image-to-text\"}\n//       />\n//       <div className=\"container border my-5\">\n//         <div className=\"row\" style={{ textAlign: \"center\" }}>\n//           {imageInputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Input Image</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageInputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//           {imageOutputURL && (\n//             <div className=\"col-6 p-2\">\n//               <h3 className=\"display-5\">Result</h3>\n//               <img\n//                 style={{\n//                   width: \"100%\",\n//                   border: \"4px solid #d2d2d2\",\n//                   borderRadius: \"5px\",\n//                 }}\n//                 src={imageOutputURL}\n//                 alt=\"img\"\n//               />\n//             </div>\n//           )}\n//         </div>\n//         {text && (\n//           <div\n//             className=\"row\"\n//             style={{ marginTop: \"30px\", borderTop: \"2px solid gray\" }}\n//           >\n//             <hr />\n//             <h1>\n//               Image Contains:\n//               {speaking ? (\n//                 <button\n//                   className=\"btn btn-secondary m-2 p-2\"\n//                   type=\"button\"\n//                   onClick={cancel}\n//                 >\n//                   Stop\n//                 </button>\n//               ) : (\n//                 <button\n//                   className=\"btn btn-success m-2 p-2\"\n//                   type=\"button\"\n//                   onClick={() => speak({ text })}\n//                 >\n//                   Speak\n//                 </button>\n//               )}\n//             </h1>\n//             <hr />\n//             <div\n//               className=\"p-5 m-5\"\n//               style={{ background: \"rgba(235, 255, 251, 0.8)\", width: \"85%\" }}\n//             >\n//               <h5>{text}</h5>\n//             </div>\n//           </div>\n//         )}\n//       </div>\n//     </React.Fragment>\n//   );\n// };\n// export default ImageToText;\n\n\n\n\n\n\n\n\n\n////////////////////////////////////////////////////\n\n\n\n\n\n// import React, { useState } from \"react\";\n// import FileUpload from \"./FileUpload\";\n// import { useSpeechSynthesis } from \"react-speech-kit\";\n//\n// const ImageToText = () => {\n//   const [imageInputURL, setImageInputUrl] = useState(\"\");\n//   const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n//   const [text, setText] = useState(\"\");\n//   const { speak, cancel, speaking } = useSpeechSynthesis();\n//\n//   const speakOutput = (text) => {\n//     speak({ text: `This Image contains: ${text}` });\n//   };\n//\n//   return (\n//     <div className=\"phone-container\">\n//       <div className=\"phone\" style={{ width: \"85%\" }}> {/* Increase width by 25% */}\n//         <div className=\"phone-screen\">\n//           <div className=\"assistant-container\">\n//             <div className=\"assistant-content\">\n//               <div className=\"assistant-title\">\n//                 <h1>Image To Text</h1>\n//               </div>\n//               <div className=\"assistant-body\">\n//                 <FileUpload\n//                   setImageInputUrl={setImageInputUrl}\n//                   setImageOutputUrl={setImageOutputUrl}\n//                   setText={setText}\n//                   speak={speakOutput}\n//                   url={\"http://localhost:5000/image-to-text\"}\n//                 />\n//                 {imageInputURL && (\n//                   <div className=\"input-image\">\n//                     <h3>Input Image</h3>\n//                     <img src={imageInputURL} alt=\"Input\" />\n//                   </div>\n//                 )}\n//                 {imageOutputURL && (\n//                   <div className=\"output-image\">\n//                     <h3>Result</h3>\n//                     <img src={imageOutputURL} alt=\"Output\" />\n//                   </div>\n//                 )}\n//                 {text && (\n//                   <div className=\"result\">\n//                     <h3>Image Contains:</h3>\n//                     <div className=\"text-area\">\n//                       <div className=\"text\">{text}</div>\n//                       {speaking ? (\n//                         <button className=\"stop-button\" onClick={cancel}>\n//                           Stop\n//                         </button>\n//                       ) : (\n//                         <button className=\"speak-button\" onClick={() => speak({ text })}>\n//                           Speak\n//                         </button>\n//                       )}\n//                     </div>\n//                   </div>\n//                 )}\n//               </div>\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//       <style jsx>{`\n//         .phone-container {\n//           display: flex;\n//           justify-content: center;\n//           align-items: center;\n//           height: 100vh;\n//           background: linear-gradient(135deg, #2d75ff, #a8bfff);\n//         }\n//         .phone {\n//           width: 85%; /* Increase width by 25% */\n//           height: 90%; /* Adjust as needed */\n//           max-width: 750px; /* Set maximum width */\n//           max-height: 800px; /* Set maximum height */\n//           background: #333;\n//           border-radius: 20px;\n//           overflow: hidden;\n//           box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n//         }\n//         .phone-screen {\n//           width: 100%;\n//           height: 100%;\n//           background: #fff;\n//           padding: 20px;\n//           display: flex;\n//           justify-content: center;\n//           align-items: center;\n//         }\n//         .assistant-container {\n//           width: 100%;\n//           max-width: 400px;\n//         }\n//         .assistant-content {\n//           text-align: center;\n//         }\n//         .assistant-title {\n//           font-size: 28px;\n//           margin-bottom: 20px;\n//         }\n//         .assistant-body {\n//           margin-top: 20px;\n//         }\n//         .input-image,\n//         .output-image {\n//           margin-top: 20px;\n//           text-align: center;\n//         }\n//         .input-image img,\n//         .output-image img {\n//           width: 100%;\n//           border: 4px solid #d2d2d2;\n//           border-radius: 5px;\n//         }\n//         .result {\n//           margin-top: 30px;\n//           border-top: 2px solid gray;\n//           padding-top: 20px;\n//         }\n//         .text-area {\n//           display: flex;\n//           align-items: center;\n//           justify-content: space-between;\n//           margin-top: 20px;\n//         }\n//         .text {\n//           background: rgba(235, 255, 251, 0.8);\n//           width: 85%;\n//           padding: 20px;\n//           border-radius: 5px;\n//         }\n//         .speak-button,\n//         .stop-button {\n//           padding: 10px 20px;\n//           font-size: 16px;\n//           border: none;\n//           border-radius: 5px;\n//           cursor: pointer;\n//           transition: background-color 0.3s ease;\n//         }\n//         .speak-button:hover {\n//           background-color: #4caf50;\n//         }\n//         .stop-button {\n//           background-color: #f44336;\n//         }\n//       `}</style>\n//     </div>\n//   );\n// };\n//\n// export default ImageToText;\n\n\n\n\n\n//////////////////////////////////////////////////////\n\n\n\n\n\nimport React, { useState } from \"react\";\nimport FileUpload from \"./FileUpload\";\nimport { useSpeechSynthesis } from \"react-speech-kit\";\n\nconst ImageToText = () => {\n  const [imageInputURL, setImageInputUrl] = useState(\"\");\n  const [imageOutputURL, setImageOutputUrl] = useState(\"\");\n  const [text, setText] = useState(\"\");\n  const { speak, cancel, speaking } = useSpeechSynthesis();\n\n  const speakOutput = (text) => {\n    speak({ text: `This Image contains: ${text}` });\n  };\n\n  const handleCopyText = () => {\n    // Copy text to clipboard\n    navigator.clipboard.writeText(text);\n    // Optionally provide user feedback\n    alert(\"Transcript copied to clipboard!\");\n  };\n\n  return (\n    <div className=\"phone-container\">\n      <div className=\"phone\" style={{ width: \"85%\", height: \"95%\" }}>\n        <div className=\"phone-screen\">\n          <div className=\"assistant-container\">\n            <div className=\"assistant-content\">\n              <div className=\"assistant-title\">\n                <h1 style={{ color: \"#004438\", textShadow: \"1px 1px 2px #000000\" }}>Image To Text</h1>\n              </div>\n              <div className=\"assistant-body\">\n                <FileUpload\n                  setImageInputUrl={setImageInputUrl}\n                  setImageOutputUrl={setImageOutputUrl}\n                  setText={setText}\n                  speak={speakOutput}\n                  url={\"http://localhost:5000/image-to-text\"}\n                />\n                <div className=\"image-container\">\n                  {imageInputURL && (\n                    <div className=\"input-image\">\n                      <h3>Input Image</h3>\n                      <img src={imageInputURL} alt=\"Input\" />\n                    </div>\n                  )}\n                  {imageOutputURL && (\n                    <div className=\"output-image\">\n                      <h3>Result</h3>\n                      <img src={imageOutputURL} alt=\"Output\" />\n                    </div>\n                  )}\n                </div>\n                {text && (\n                  <div className=\"result\">\n                    <h3>Transcription:</h3>\n                    <div className=\"text-area\">\n                      <div className=\"buttons\">\n                        {speaking ? (\n                          <button className=\"stop-button\" onClick={cancel}>\n                            Stop Speaking\n                          </button>\n                        ) : (\n                          <button className=\"speak-button\" onClick={() => speak({ text })}>\n                            Speak Transcript\n                          </button>\n                        )}\n                        <button className=\"copy-button\" onClick={handleCopyText}>\n                          Copy Transcript\n                        </button>\n                      </div>\n                      <div className=\"text\">{text}</div>\n                    </div>\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <style jsx>{`\n        /* Styles go here */\n        .phone-container {\n          display: flex;\n          justify-content: center;\n          align-items: center;\n          height: 100vh;\n          background: linear-gradient(135deg, #2d75ff, #a8bfff);\n        }\n        .phone {\n          width: 85%;\n          height: 95%;\n          max-width: 750px;\n          background: #333;\n          border-radius: 20px;\n          overflow: hidden;\n          box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);\n        }\n        .phone-screen {\n          width: 100%;\n          height: 100%;\n          background: #fff;\n          padding: 20px;\n          display: flex;\n          justify-content: center;\n          align-items: center;\n        }\n        .assistant-container {\n          width: 100%;\n          max-width: 400px;\n        }\n        .assistant-content {\n          text-align: center;\n        }\n        .assistant-title {\n          font-size: 28px;\n          margin-bottom: 20px;\n        }\n        .assistant-body {\n          margin-top: 20px;\n        }\n        .image-container {\n          display: flex;\n          justify-content: space-between;\n          margin-bottom: 20px;\n        }\n        .input-image,\n        .output-image {\n          flex: 1;\n          text-align: center;\n        }\n        .input-image img,\n        .output-image img {\n          width: 100%;\n          border: 4px solid #d2d2d2;\n          border-radius: 5px;\n        }\n        .result {\n          margin-top: 30px;\n          border-top: 2px solid gray;\n          padding-top: 20px;\n        }\n        .text-area {\n          display: flex;\n          flex-direction: column;\n          align-items: center;\n        }\n        .text {\n          background: rgba(235, 255, 251, 0.8);\n          width: 85%;\n          padding: 20px;\n          border-radius: 5px;\n          margin-bottom: 10px;\n        }\n        .buttons {\n          display: flex;\n          justify-content: space-between;\n        }\n        .speak-button,\n        .copy-button,\n        .stop-button {\n          padding: 8px 16px;\n          font-size: 14px;\n          border: none;\n          border-radius: 5px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n        }\n        .speak-button:hover {\n          background-color: #4caf50;\n        }\n        .copy-button:hover {\n          background-color: #2196f3;\n        }\n        .stop-button {\n          background-color: #f44336;\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default ImageToText;\n"],"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"},"metadata":{},"sourceType":"module"}